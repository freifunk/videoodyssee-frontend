{"version":3,"file":"static/js/977.d1f752f3.chunk.js","mappings":"6TAgBMA,EAAgB,CAClBC,MAAO,GACPC,SAAU,IAiId,EA3Ha,WAET,OAA4BC,EAAAA,EAAAA,UAASH,GAArC,eAAOI,EAAP,KAAeC,EAAf,KACA,GAAsBF,EAAAA,EAAAA,UAAS,CAAEG,KAAK,EAAOC,QAAS,KAAtD,eAAOD,EAAP,KAAYE,EAAZ,KACA,GAA8BL,EAAAA,EAAAA,UAAS,CAAEM,SAAS,EAAOF,QAAS,KAAlE,eAAOE,EAAP,KAAgBC,EAAhB,KAIMC,EAAoB,SAACC,GACvB,MAAwBA,EAAEC,OAAlBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACdV,GAAU,kBACHD,GADE,cAEJU,EAAOC,IAEf,EAIKC,EAAY,yCAAG,WAAOC,GAAP,qFACjBA,EAAMC,iBADW,kBAGGC,MAAM,GAAD,OAAIC,CAAAA,SAAAA,aAAAA,WAAAA,GAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,cAAAA,GAAYC,kBAAhB,eAAgD,CACjEC,QAAS,CACL,OAAU,mBACV,eAAgB,oBAEpBC,OAAQ,OACRC,KAAMC,KAAKC,UAAUtB,KATZ,cAGTuB,EAHS,gBAWOA,EAAIC,OAXX,OAWTC,EAXS,OAYbC,QAAQC,IAAIF,GACO,MAAfF,EAAIK,QAEJtB,EAAW,CAAED,SAAS,EAAMF,QAAS,iCACrC0B,aAAaC,QAAQ,UAAWL,EAAQM,MACxCC,OAAOC,SAASC,KAAQ,cAExB9B,EAAO,CAAEF,KAAK,EAAMC,QAASsB,EAAQtB,UAnB5B,kDAsBbuB,QAAQC,IAAR,MAtBa,0DAAH,sDA8BlB,OACI,UAACQ,EAAA,GAAD,YAGI,SAACC,EAAA,EAAD,CACIC,KAAMhC,EAAQA,QACdiC,aAAc,CAAEC,SAAU,MAAOC,WAAY,SAC7CC,iBAAkB,IAClBC,QAAS,kBAAMpC,EAAW,CAAED,SAAS,GAA5B,EAJb,UAMI,SAACsC,EAAA,EAAD,CAAOD,QAAS,kBAAMpC,EAAW,CAAED,SAAS,GAA5B,EAAsCuC,SAAS,UAAUC,GAAI,CAAEC,MAAO,QAAtF,SACKzC,EAAQF,aAIjB,SAACiC,EAAA,EAAD,CACIC,KAAMnC,EAAIA,IACVoC,aAAc,CAAEC,SAAU,MAAOC,WAAY,SAC7CC,iBAAkB,IAClBC,QAAS,kBAAMtC,EAAO,CAAEF,KAAK,GAApB,EAJb,UAMI,SAACyC,EAAA,EAAD,CAAOD,QAAS,kBAAMtC,EAAO,CAAEF,KAAK,GAApB,EAA8B0C,SAAS,QAAQC,GAAI,CAAEC,MAAO,QAA5E,SACK5C,EAAIC,aAIb,UAAC4C,EAAA,EAAD,CAAOC,UAAW,GAAIC,UAAU,QAAhC,WAEI,eAAIC,MAAM,SAAV,oBACA,wBACI,SAACC,EAAA,EAAD,CAAaC,WAAS,EAAtB,UACI,SAACC,EAAA,EAAD,CACI1C,MAAOX,EAAOH,MACdyD,KAAK,QACL5C,KAAK,QACL6C,SAAUhD,EACViD,GAAG,iBACHC,MAAM,QACNC,QAAQ,WACRC,KAAK,QACLC,WAAS,SAIrB,wBACI,SAACT,EAAA,EAAD,CAAaC,WAAS,EAAtB,UACI,SAACC,EAAA,EAAD,CACI1C,MAAOX,EAAOF,SACdwD,KAAK,WACL5C,KAAK,WACL6C,SAAUhD,EACViD,GAAG,iBACHC,MAAM,WACNC,QAAQ,WACRC,KAAK,eAOjB,SAACR,EAAA,EAAD,CAAaC,WAAS,EAAtB,UACI,SAACS,EAAA,EAAD,CACIH,QAAQ,YACRI,QAASlD,EAFb,2BAWnB,C","sources":["content/applications/LoginForm/index.js"],"sourcesContent":["import {\n    Grid,\n    Paper,\n    TextField,\n    FormControl,\n    Button,\n    Alert,\n    Snackbar,\n\n} from '@mui/material';\n\nimport './styles.css'\nimport { useState } from 'react';\n\n\n\nconst initialValues = {\n    email: \"\",\n    password: \"\",\n\n};\n\n\n\nconst Form = () => {\n\n    const [values, setValues] = useState(initialValues);\n    const [err, setErr] = useState({ err: false, message: '' });\n    const [success, setSuccess] = useState({ success: false, message: '' });\n\n\n\n    const handleInputChange = (e) => {\n        const { name, value } = e.target;\n        setValues({\n            ...values,\n            [name]: value,\n        });\n    };\n\n\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        try {\n            let res = await fetch(`${process.env.REACT_APP_API_URL}/auth/login`, {\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                method: \"POST\",\n                body: JSON.stringify(values),\n            });\n            let resJson = await res.json();\n            console.log(resJson);\n            if (res.status === 200) {\n\n                setSuccess({ success: true, message: \"Authentication Successful !!\" })\n                localStorage.setItem('x-token', resJson.data);\n                window.location.href =  \"/dashboard\";\n            } else {\n                setErr({ err: true, message: resJson.message })\n            }\n        } catch (err) {\n            console.log(err);\n        }\n\n    };\n\n\n\n\n    return (\n        <Grid>\n\n\n            <Snackbar\n                open={success.success}\n                anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n                autoHideDuration={6000}\n                onClose={() => setSuccess({ success: false })}\n            >\n                <Alert onClose={() => setSuccess({ success: false })} severity=\"success\" sx={{ width: '100%' }}>\n                    {success.message}\n                </Alert>\n            </Snackbar>\n\n            <Snackbar\n                open={err.err}\n                anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n                autoHideDuration={6000}\n                onClose={() => setErr({ err: false })}\n            >\n                <Alert onClose={() => setErr({ err: false })} severity=\"error\" sx={{ width: '100%' }}>\n                    {err.message}\n                </Alert>\n            </Snackbar>\n\n            <Paper elevation={10} className=\"paper\">\n                {/* <img src=\"/static/images/logo/logo-small.png\" alt='Friefunk logo'/> */}\n                <h2 align='center'>Login</h2>\n                <p>\n                    <FormControl fullWidth >\n                        <TextField\n                            value={values.email}\n                            type=\"email\"\n                            name=\"email\"\n                            onChange={handleInputChange}\n                            id=\"outlined-basic\"\n                            label=\"Email\"\n                            variant=\"outlined\"\n                            size='small'\n                            autoFocus\n                        />\n                    </FormControl>\n                </p>\n                <p>\n                    <FormControl fullWidth >\n                        <TextField\n                            value={values.password}\n                            type=\"password\"\n                            name=\"password\"\n                            onChange={handleInputChange}\n                            id=\"outlined-basic\"\n                            label=\"Password\"\n                            variant=\"outlined\"\n                            size='small'\n                        />\n\n                    </FormControl>\n                </p>\n\n\n                <FormControl fullWidth >\n                    <Button\n                        variant=\"contained\"\n                        onClick={handleSubmit}\n                    >\n                        Submit\n                    </Button>\n                </FormControl>\n\n            </Paper>\n        </Grid>\n    )\n}\n\nexport default Form;\n"],"names":["initialValues","email","password","useState","values","setValues","err","message","setErr","success","setSuccess","handleInputChange","e","target","name","value","handleSubmit","event","preventDefault","fetch","process","REACT_APP_API_URL","headers","method","body","JSON","stringify","res","json","resJson","console","log","status","localStorage","setItem","data","window","location","href","Grid","Snackbar","open","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","Alert","severity","sx","width","Paper","elevation","className","align","FormControl","fullWidth","TextField","type","onChange","id","label","variant","size","autoFocus","Button","onClick"],"sourceRoot":""}