{"version":3,"file":"static/js/551.16a50608.chunk.js","mappings":"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","sources":["content/applications/Form/index.js"],"sourcesContent":["import {\n  Grid,\n  Paper,\n  TextField,\n  Select,\n  MenuItem,\n  FormControl,\n  Autocomplete,\n  InputLabel,\n  Button,\n  Alert,\n  Snackbar,\n\n} from '@mui/material';\n\nimport './styles.css'\nimport { useState, useEffect } from 'react';\n\n\n\nconst initialValues = {\n  title: \"\",\n  subtitle: \"\",\n  persons: [],\n  tags: [],\n  conference: \"\",\n  language: \"eng\",\n  date: new Date().toISOString().split('T')[0],\n  url: \"\",\n  name: \"\",\n  email: \"\",\n  link: \"\",\n  description: \"\"\n};\n\n\nconst Form = () => {\n\n  const [values, setValues] = useState(initialValues);\n  const [err, setErr] = useState({ err: false, message: '' });\n  const [success, setSuccess] = useState({ success: false, message: '' });\n  const [conferences, setConferences] = useState([]);\n\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setValues({\n      ...values,\n      [name]: value,\n    });\n  };\n\n  const handleAutocompleteInputChange = (name, value) => {\n    setValues({\n      ...values,\n      [name]: value,\n    });\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      let res = await fetch(`${process.env.REACT_APP_API_URL}/video/`, {\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        method: \"POST\",\n        body: JSON.stringify(values),\n      });\n      let resJson = await res.json();\n      console.log(resJson);\n      if (res.status === 200) {\n\n        setSuccess({ success: true, message: resJson.data })\n      } else {\n        setErr({ err: true, message: resJson.message })\n      }\n    } catch (err) {\n      console.log(err);\n    }\n\n  };\n\n  useEffect(() => {\n    const getConferences = async () => {\n      try {\n        let res = await fetch(`${process.env.REACT_APP_VOCTOWEB_API_URL}/public/conferences`, {\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n          }\n        })\n        let resJson = await res.json();\n        setConferences(resJson.conferences);\n        if (resJson.conferences && resJson.conferences.length > 0) {\n          setValues(prevValues => ({ ...prevValues, conference: resJson.conferences[0].acronym }));\n        }\n      }\n      catch (err) {\n        console.log(err);\n      }\n    }\n    getConferences();\n\n  }, [])\n\n\n  return (\n    <Grid>\n\n\n      <Snackbar\n        open={success.success}\n        anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n        autoHideDuration={6000}\n        onClose={() => setSuccess({ success: false })}\n      >\n        <Alert onClose={() => setSuccess({ success: false })} severity=\"success\" sx={{ width: '100%' }}>\n          {success.message}\n        </Alert>\n      </Snackbar>\n\n      <Snackbar\n        open={err.err}\n        anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n        autoHideDuration={6000}\n        onClose={() => setErr({ err: false })}\n      >\n        <Alert onClose={() => setErr({ err: false })} severity=\"error\" sx={{ width: '100%' }}>\n          {err.message}\n        </Alert>\n      </Snackbar>\n\n      <Paper elevation={10} className=\"paper\">\n        <img src=\"/static/images/logo/logo-small.png\" alt='Freifunk logo' />\n        <h2 align='center'>Video Upload </h2>\n        <div>\n          <FormControl fullWidth >\n            <TextField\n              value={values.title}\n              name=\"title\"\n              onChange={handleInputChange}\n              id=\"title-input\"\n              label=\"Title\"\n              variant=\"outlined\"\n              size='small'\n              autoFocus\n            />\n          </FormControl>\n        </div>\n        <div>\n          <FormControl fullWidth >\n            <TextField\n              value={values.subtitle}\n              name=\"subtitle\"\n              onChange={handleInputChange}\n              id=\"subtitle-input\"\n              label=\"Subtitle\"\n              variant=\"outlined\"\n              size='small'\n            />\n\n          </FormControl>\n        </div>\n\n        <div>\n          <FormControl fullWidth >\n            <Autocomplete\n\n              multiple\n              id=\"persons\"\n              onChange={(event, value) => handleAutocompleteInputChange('persons', value)}\n              options={[]}\n              freeSolo\n              size='small'\n              renderInput={(params) => <TextField {...params} label=\"Persons\" />}\n            />\n          </FormControl>\n        </div>\n\n        <div>\n          <FormControl fullWidth >\n            <Autocomplete\n\n              multiple\n              id=\"tags\"\n              onChange={(event, value) => handleAutocompleteInputChange('tags', value)}\n              options={[]}\n              freeSolo\n              size='small'\n              renderInput={(params) => <TextField {...params} label=\"Tags\" />}\n            />\n          </FormControl>\n        </div>\n\n        <div>\n          <FormControl fullWidth >\n            <InputLabel id=\"event-select-label\">Conference</InputLabel>\n            <Select\n              labelId=\"event-select-label\"\n              id=\"conference\"\n              name=\"conference\"\n              value={values.conference}\n              onChange={handleInputChange}\n              label=\"Conference\"\n              size='small'\n            >\n              {conferences.map(({ acronym, title }, index) => (\n                <MenuItem key={acronym} value={acronym}>{title}</MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </div>\n\n        <div>\n          <FormControl fullWidth >\n            <InputLabel id=\"lang-select-label\">Language</InputLabel>\n            <Select\n              labelId=\"lang-select-label\"\n              id=\"language\"\n              name=\"language\"\n              value={values.language}\n              onChange={handleInputChange}\n              label=\"Language\"\n              size='small'\n            >\n              <MenuItem value={'eng'}>English</MenuItem>\n              <MenuItem value={'deu'}>German</MenuItem>\n              <MenuItem value={'rus'}>Russian</MenuItem>\n              <MenuItem value={'fra'}>French</MenuItem>\n              <MenuItem value={'spa'}>Spanish</MenuItem>\n              <MenuItem value={'jpn'}>Japaneese</MenuItem>\n              <MenuItem value={'hin'}>Hindi</MenuItem>\n\n\n            </Select>\n          </FormControl>\n        </div>\n\n        <div>\n          <FormControl fullWidth >\n            <TextField\n              value={values.date}\n              name=\"date\"\n              onChange={handleInputChange}\n              id=\"date-input\"\n              label=\"Date\"\n              type=\"date\"\n              size='small'\n\n            />\n          </FormControl>\n\n        </div>\n\n        <div>\n          <FormControl fullWidth >\n            <TextField\n              value={values.url}\n              onChange={handleInputChange}\n              name=\"url\"\n              id=\"url-input\"\n              label=\"Video URL\"\n              type='url'\n              size='small'\n            />\n          </FormControl>\n        </div>\n\n        <div>\n          <FormControl fullWidth >\n            <TextField\n              value={values.name}\n              onChange={handleInputChange}\n              name=\"name\"\n              id=\"name-input\"\n              label=\"Name\"\n              size='small'\n            />\n          </FormControl>\n        </div>\n\n\n        <div>\n          <FormControl fullWidth >\n            <TextField\n              value={values.email}\n              onChange={handleInputChange}\n              name=\"email\"\n              id=\"email-input\"\n              label=\"Email\"\n              type=\"email\"\n              size='small'\n            />\n          </FormControl>\n        </div>\n\n        <div>\n          <FormControl fullWidth >\n            <TextField\n              value={values.link}\n              onChange={handleInputChange}\n              name=\"link\"\n              id=\"link-input\"\n              label=\"Link\"\n\n              size='small'\n            />\n          </FormControl>\n        </div>\n\n        <div>\n          <FormControl fullWidth >\n            <TextField\n              value={values.description}\n              onChange={handleInputChange}\n              name=\"description\"\n              id=\"description-input\"\n              label=\"Description\"\n              size='small'\n              multiline\n            />\n          </FormControl>\n        </div>\n        <FormControl fullWidth >\n          <Button variant=\"contained\" onClick={handleSubmit}>\n            Submit\n          </Button>\n        </FormControl>\n      </Paper>\n    </Grid>\n  )\n}\n\nexport default Form;\n"],"names":["initialValues","title","subtitle","persons","tags","conference","language","date","Date","toISOString","split","url","name","email","link","description","Form","values","setValues","useState","err","setErr","message","success","setSuccess","conferences","setConferences","handleInputChange","e","value","target","_objectSpread","handleAutocompleteInputChange","useEffect","async","res","fetch","concat","process","REACT_APP_VOCTOWEB_API_URL","headers","resJson","json","length","prevValues","acronym","console","log","getConferences","_jsxs","Grid","children","_jsx","Snackbar","open","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","Alert","severity","sx","width","Paper","elevation","className","src","alt","align","FormControl","fullWidth","TextField","onChange","id","label","variant","size","autoFocus","Autocomplete","multiple","event","options","freeSolo","renderInput","params","InputLabel","Select","labelId","map","_ref","index","MenuItem","type","multiline","Button","onClick","preventDefault","REACT_APP_API_URL","method","body","JSON","stringify","status","data"],"sourceRoot":""}