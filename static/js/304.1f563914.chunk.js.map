{"version":3,"file":"static/js/304.1f563914.chunk.js","mappings":"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","sources":["components/ScheduleImport/index.js","content/applications/Form/index.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './ScheduleImport.css';\n\nconst ScheduleImport = ({ onTalkSelect }) => {\n  const [scheduleUrl, setScheduleUrl] = useState('');\n  const [schedule, setSchedule] = useState(null);\n  const [talks, setTalks] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  const fetchSchedule = async () => {\n    if (!scheduleUrl.trim()) {\n      setError('Bitte gib eine gültige Schedule-URL ein');\n      return;\n    }\n\n    setLoading(true);\n    setError('');\n    \n    try {\n      const response = await fetch(scheduleUrl);\n      \n      if (!response.ok) {\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`);\n      }\n      \n      const data = await response.json();\n      \n      const extractedTalks = extractTalks(data);\n      \n      setSchedule(data);\n      setTalks(extractedTalks);\n      \n      if (extractedTalks.length === 0) {\n        setError('Keine Talks in diesem Schedule gefunden');\n      }\n      \n    } catch (err) {\n      console.error('Fehler beim Laden des Schedules:', err);\n      setError(`Fehler beim Laden: ${err.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const extractTalks = (scheduleData) => {\n    const talks = [];\n    \n    if (!scheduleData.schedule || !scheduleData.schedule.conference || !scheduleData.schedule.conference.days) {\n      console.log('No schedule.conference.days found in data');\n      return talks;\n    }\n\n    // Iterate through days\n    scheduleData.schedule.conference.days.forEach(day => {\n      if (!day.rooms) return;\n      \n      // Iterate through rooms\n      Object.keys(day.rooms).forEach(roomName => {\n        const roomTalks = day.rooms[roomName];\n        if (!Array.isArray(roomTalks)) return;\n        \n        // Process each talk\n        roomTalks.forEach(talk => {\n          const processedTalk = {\n            id: talk.id,\n            title: talk.title || '',\n            subtitle: talk.subtitle || '',\n            abstract: talk.abstract || '',\n            description: talk.description || talk.abstract || '',\n            date: talk.date || day.date,\n            start: talk.start || '',\n            duration: talk.duration || '',\n            room: talk.room || roomName,\n            language: talk.language || 'en',\n            type: talk.type || '',\n            url: talk.url || '',\n            persons: talk.persons ? talk.persons.map(p => p.public_name || p.name).join(', ') : '',\n            // Create tags from type and other metadata\n            tags: [\n              talk.type,\n              talk.language,\n              talk.room\n            ].filter(Boolean).join(', '),\n            originalUrl: talk.url || '',\n            // Format date for display\n            formattedDate: talk.date ? formatDate(talk.date) : day.date ? formatDate(day.date) : '',\n            // Additional metadata\n            guid: talk.guid,\n            slug: talk.slug,\n            do_not_record: talk.do_not_record\n          };\n          \n          talks.push(processedTalk);\n        });\n      });\n    });\n    \n    console.log(`Extracted ${talks.length} talks from schedule`);\n    return talks;\n  };\n\n  const handleTalkSelect = (talk) => {\n    onTalkSelect({\n      title: talk.title,\n      subtitle: talk.subtitle,\n      description: talk.description,\n      persons: talk.persons,\n      tags: talk.tags,\n      date: talk.date,\n      originalUrl: talk.originalUrl\n    });\n  };\n\n  const formatDate = (dateString) => {\n    try {\n      const date = new Date(dateString);\n      if (isNaN(date.getTime())) return dateString;\n      \n      return date.toLocaleDateString('de-DE', {\n        weekday: 'short',\n        day: 'numeric',\n        month: 'long',\n        year: 'numeric'\n      });\n    } catch (e) {\n      return dateString;\n    }\n  };\n\n  return (\n    <div className=\"schedule-import\">\n      <h3>📅 Pretalx Schedule Import</h3>\n      \n      <div className=\"schedule-url-input\">\n        <div className=\"form-group\">\n          <label className=\"form-label\" htmlFor=\"schedule-url\">Schedule JSON URL</label>\n          <div className=\"url-input-group\">\n            <input\n              type=\"url\"\n              id=\"schedule-url\"\n              className=\"form-input\"\n              value={scheduleUrl}\n              onChange={(e) => setScheduleUrl(e.target.value)}\n              placeholder=\"https://pretalx.example.com/event/schedule/export/schedule.json\"\n            />\n            <button \n              type=\"button\"\n              className=\"load-button\"\n              onClick={fetchSchedule}\n              disabled={loading}\n            >\n              {loading ? '⏳' : '📥'} Laden\n            </button>\n          </div>\n        </div>\n        \n        {error && (\n          <div className=\"alert alert-error\">\n            {error}\n          </div>\n        )}\n      </div>\n\n      {schedule && (\n        <div className=\"schedule-info\">\n          <h4>🎪 {schedule.schedule.conference.title}</h4>\n          <p>\n            📅 {schedule.schedule.conference.start} bis {schedule.schedule.conference.end} | \n            🗣️ {talks.length} Talks gefunden\n          </p>\n        </div>\n      )}\n\n      {talks.length > 0 && (\n        <div className=\"talks-list\">\n          <h4>Talks auswählen:</h4>\n          <div className=\"talks-grid\">\n            {talks.map((talk) => (\n              <div className=\"talk-card\" key={talk.id} onClick={() => handleTalkSelect(talk)}>\n                <div className=\"talk-header\">\n                  <h4 className=\"talk-title\">{talk.title}</h4>\n                  {talk.subtitle && <p className=\"talk-subtitle\">{talk.subtitle}</p>}\n                </div>\n                \n                <div className=\"talk-meta\">\n                  <div className=\"talk-date-time\">\n                    📅 {talk.formattedDate}\n                    {talk.start && <span className=\"talk-time\"> • ⏰ {talk.start}</span>}\n                    {talk.duration && <span className=\"talk-duration\"> • ⏱️ {talk.duration}</span>}\n                  </div>\n                  \n                  {talk.room && (\n                    <div className=\"talk-room\">\n                      🏠 {talk.room}\n                    </div>\n                  )}\n                  \n                  {talk.type && (\n                    <div className=\"talk-type\">\n                      🎯 {talk.type}\n                    </div>\n                  )}\n                  \n                  {talk.persons && (\n                    <div className=\"talk-persons\">\n                      👤 {talk.persons}\n                    </div>\n                  )}\n                </div>\n                \n                {talk.abstract && (\n                  <p className=\"talk-description\">\n                    {talk.abstract.length > 150 \n                      ? `${talk.abstract.substring(0, 150)}...` \n                      : talk.abstract\n                    }\n                  </p>\n                )}\n                \n                <div className=\"talk-footer\">\n                  <span className=\"select-hint\">Klicken zum Auswählen</span>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ScheduleImport; ","import { useState, useEffect } from 'react';\nimport ScheduleImport from '../../../components/ScheduleImport';\n\nconst initialValues = {\n  title: \"\",\n  subtitle: \"\",\n  persons: [],\n  tags: [],\n  conference: \"\",\n  language: \"eng\",\n  date: new Date().toISOString().split('T')[0],\n  url: \"\",\n  name: \"\",\n  email: \"\",\n  link: \"\",\n  description: \"\"\n};\n\nconst Form = () => {\n  const [values, setValues] = useState(initialValues);\n  const [err, setErr] = useState({ err: false, message: '' });\n  const [success, setSuccess] = useState({ success: false, message: '' });\n  const [conferences, setConferences] = useState([]);\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setValues({\n      ...values,\n      [name]: value,\n    });\n  };\n\n  const handleTalkSelect = (talkData) => {\n    // Convert comma-separated strings to arrays for persons and tags\n    const personsArray = talkData.persons \n      ? talkData.persons.split(',').map(p => p.trim()).filter(p => p)\n      : [];\n    \n    const tagsArray = talkData.tags \n      ? talkData.tags.split(',').map(t => t.trim()).filter(t => t)\n      : [];\n\n    // Format date from ISO string to YYYY-MM-DD\n    let formattedDate = values.date; // Keep current date as default\n    if (talkData.date) {\n      try {\n        const date = new Date(talkData.date);\n        if (!isNaN(date.getTime())) {\n          formattedDate = date.toISOString().split('T')[0];\n        }\n      } catch (e) {\n        console.log('Date parsing error:', e);\n      }\n    }\n\n    setValues({\n      ...values,\n      title: talkData.title || values.title,\n      subtitle: talkData.subtitle || values.subtitle,\n      persons: personsArray.length > 0 ? personsArray : values.persons,\n      tags: tagsArray.length > 0 ? tagsArray : values.tags,\n      description: talkData.description || values.description,\n      date: formattedDate,\n      link: talkData.originalUrl || values.link,\n      // Keep existing values for fields not provided by talk data\n      conference: values.conference,\n      language: values.language,\n      url: values.url,\n      name: values.name,\n      email: values.email\n    });\n\n    // Show success message\n    setSuccess({ \n      success: true, \n      message: `Talk \"${talkData.title}\" wurde erfolgreich importiert!` \n    });\n    setTimeout(() => setSuccess({ success: false, message: '' }), 5000);\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      let res = await fetch(`${process.env.REACT_APP_API_URL}/video/`, {\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        method: \"POST\",\n        body: JSON.stringify(values),\n      });\n      let resJson = await res.json();\n      console.log(resJson);\n      if (res.status === 200) {\n        setSuccess({ success: true, message: resJson.data });\n        setTimeout(() => setSuccess({ success: false, message: '' }), 5000);\n      } else {\n        setErr({ err: true, message: resJson.message });\n        setTimeout(() => setErr({ err: false, message: '' }), 5000);\n      }\n    } catch (err) {\n      console.log(err);\n      setErr({ err: true, message: 'Ein Fehler ist aufgetreten.' });\n      setTimeout(() => setErr({ err: false, message: '' }), 5000);\n    }\n  };\n\n  useEffect(() => {\n    const getConferences = async () => {\n      try {\n        let res = await fetch(`${process.env.REACT_APP_VOCTOWEB_API_URL}/public/conferences`, {\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n          }\n        });\n        let resJson = await res.json();\n        setConferences(resJson.conferences || []);\n        if (resJson.conferences && resJson.conferences.length > 0) {\n          setValues(prevValues => ({ \n            ...prevValues, \n            conference: resJson.conferences[0].acronym \n          }));\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    getConferences();\n  }, []);\n\n  return (\n    <div className=\"form-container\">\n      <img src=\"/static/images/logo/logo-small.png\" alt='Freifunk logo' className=\"logo\" />\n      <h2 className=\"form-title\">Video Upload</h2>\n      \n      {/* Schedule Import Component */}\n      <ScheduleImport onTalkSelect={handleTalkSelect} />\n      \n      {success.success && (\n        <div className=\"alert alert-success\">\n          {success.message}\n        </div>\n      )}\n      \n      {err.err && (\n        <div className=\"alert alert-error\">\n          {err.message}\n        </div>\n      )}\n\n      <form onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n          <label className=\"form-label\" htmlFor=\"title\">Title</label>\n          <input\n            className=\"form-input\"\n            type=\"text\"\n            id=\"title\"\n            name=\"title\"\n            value={values.title}\n            onChange={handleInputChange}\n            required\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <label className=\"form-label\" htmlFor=\"subtitle\">Subtitle</label>\n          <input\n            className=\"form-input\"\n            type=\"text\"\n            id=\"subtitle\"\n            name=\"subtitle\"\n            value={values.subtitle}\n            onChange={handleInputChange}\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <label className=\"form-label\" htmlFor=\"persons\">Persons</label>\n          <div className=\"tag-input-container\">\n            <div className=\"tags\">\n              {values.persons.map((person, index) => (\n                <span key={index} className=\"tag\">\n                  {person}\n                  <button\n                    type=\"button\"\n                    className=\"tag-remove\"\n                    onClick={() => {\n                      const newPersons = values.persons.filter((_, i) => i !== index);\n                      setValues({ ...values, persons: newPersons });\n                    }}\n                  >\n                    ×\n                  </button>\n                </span>\n              ))}\n            </div>\n            <input\n              className=\"tag-input\"\n              type=\"text\"\n              placeholder=\"Add person and press Enter\"\n              onKeyDown={(e) => {\n                if (e.key === 'Enter') {\n                  e.preventDefault();\n                  const value = e.target.value.trim();\n                  if (value && !values.persons.includes(value)) {\n                    setValues({\n                      ...values,\n                      persons: [...values.persons, value]\n                    });\n                    e.target.value = '';\n                  }\n                }\n              }}\n            />\n          </div>\n        </div>\n\n        <div className=\"form-group\">\n          <label className=\"form-label\" htmlFor=\"tags\">Tags</label>\n          <div className=\"tag-input-container\">\n            <div className=\"tags\">\n              {values.tags.map((tag, index) => (\n                <span key={index} className=\"tag\">\n                  {tag}\n                  <button\n                    type=\"button\"\n                    className=\"tag-remove\"\n                    onClick={() => {\n                      const newTags = values.tags.filter((_, i) => i !== index);\n                      setValues({ ...values, tags: newTags });\n                    }}\n                  >\n                    ×\n                  </button>\n                </span>\n              ))}\n            </div>\n            <input\n              className=\"tag-input\"\n              type=\"text\"\n              placeholder=\"Add tag and press Enter\"\n              onKeyDown={(e) => {\n                if (e.key === 'Enter') {\n                  e.preventDefault();\n                  const value = e.target.value.trim();\n                  if (value && !values.tags.includes(value)) {\n                    setValues({\n                      ...values,\n                      tags: [...values.tags, value]\n                    });\n                    e.target.value = '';\n                  }\n                }\n              }}\n            />\n          </div>\n        </div>\n\n        <div className=\"form-group\">\n          <label className=\"form-label\" htmlFor=\"conference\">Conference</label>\n          <select\n            className=\"form-select\"\n            id=\"conference\"\n            name=\"conference\"\n            value={values.conference}\n            onChange={handleInputChange}\n          >\n            {conferences.map(({ acronym, title }) => (\n              <option key={acronym} value={acronym}>{title}</option>\n            ))}\n          </select>\n        </div>\n\n        <div className=\"form-group\">\n          <label className=\"form-label\" htmlFor=\"language\">Language</label>\n          <select\n            className=\"form-select\"\n            id=\"language\"\n            name=\"language\"\n            value={values.language}\n            onChange={handleInputChange}\n          >\n            <option value=\"eng\">English</option>\n            <option value=\"deu\">German</option>\n            <option value=\"rus\">Russian</option>\n            <option value=\"fra\">French</option>\n            <option value=\"spa\">Spanish</option>\n            <option value=\"jpn\">Japanese</option>\n            <option value=\"hin\">Hindi</option>\n          </select>\n        </div>\n\n        <div className=\"form-group\">\n          <label className=\"form-label\" htmlFor=\"date\">Date</label>\n          <input\n            className=\"form-input\"\n            type=\"date\"\n            id=\"date\"\n            name=\"date\"\n            value={values.date}\n            onChange={handleInputChange}\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <label className=\"form-label\" htmlFor=\"url\">Video URL</label>\n          <input\n            className=\"form-input\"\n            type=\"url\"\n            id=\"url\"\n            name=\"url\"\n            value={values.url}\n            onChange={handleInputChange}\n            required\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <label className=\"form-label\" htmlFor=\"name\">Name</label>\n          <input\n            className=\"form-input\"\n            type=\"text\"\n            id=\"name\"\n            name=\"name\"\n            value={values.name}\n            onChange={handleInputChange}\n            required\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <label className=\"form-label\" htmlFor=\"email\">Email</label>\n          <input\n            className=\"form-input\"\n            type=\"email\"\n            id=\"email\"\n            name=\"email\"\n            value={values.email}\n            onChange={handleInputChange}\n            required\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <label className=\"form-label\" htmlFor=\"link\">Link</label>\n          <input\n            className=\"form-input\"\n            type=\"url\"\n            id=\"link\"\n            name=\"link\"\n            value={values.link}\n            onChange={handleInputChange}\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <label className=\"form-label\" htmlFor=\"description\">Description</label>\n          <textarea\n            className=\"form-input form-textarea\"\n            id=\"description\"\n            name=\"description\"\n            value={values.description}\n            onChange={handleInputChange}\n            rows=\"4\"\n          />\n        </div>\n\n        <button type=\"submit\" className=\"form-button\">\n          Submit\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default Form;\n"],"names":["_ref","onTalkSelect","scheduleUrl","setScheduleUrl","useState","schedule","setSchedule","talks","setTalks","loading","setLoading","error","setError","extractTalks","scheduleData","conference","days","forEach","day","rooms","Object","keys","roomName","roomTalks","Array","isArray","talk","processedTalk","id","title","subtitle","abstract","description","date","start","duration","room","language","type","url","persons","map","p","public_name","name","join","tags","filter","Boolean","originalUrl","formattedDate","formatDate","guid","slug","do_not_record","push","console","log","concat","length","dateString","Date","isNaN","getTime","toLocaleDateString","weekday","month","year","e","_jsxs","className","children","_jsx","htmlFor","value","onChange","target","placeholder","onClick","async","trim","response","fetch","ok","Error","status","statusText","data","json","extractedTalks","err","message","disabled","end","handleTalkSelect","substring","initialValues","toISOString","split","email","link","Form","values","setValues","setErr","success","setSuccess","conferences","setConferences","handleInputChange","_objectSpread","useEffect","res","process","REACT_APP_VOCTOWEB_API_URL","headers","resJson","prevValues","acronym","getConferences","src","alt","ScheduleImport","talkData","personsArray","tagsArray","t","setTimeout","onSubmit","event","preventDefault","REACT_APP_API_URL","method","body","JSON","stringify","required","person","index","newPersons","_","i","onKeyDown","key","includes","tag","newTags","rows"],"sourceRoot":""}