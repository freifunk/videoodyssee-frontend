{"version":3,"file":"static/js/448.162b27bd.chunk.js","mappings":"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","sources":["content/applications/Transactions/PageHeader.js","components/Label/index.js","content/applications/Transactions/BulkActions.js","content/applications/Transactions/RecentOrdersTable.js","content/applications/Transactions/index.js","components/PageTitleWrapper/index.js","components/Footer/index.js"],"sourcesContent":["import { Typography, Grid } from '@mui/material';\n\n\nfunction PageHeader() {\n  const user = {\n    name: 'Andi Braeu',\n    avatar: '/static/images/avatars/1.jpg'\n  };\n  return (\n    <Grid container justifyContent=\"space-between\" alignItems=\"center\">\n      <Grid item>\n        <Typography variant=\"h3\" component=\"h3\" gutterBottom>\n          Videos\n        </Typography>\n        <Typography variant=\"subtitle2\">\n          {user.name}, these are your recent videos\n        </Typography>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default PageHeader;\n","import PropTypes from 'prop-types';\nimport { styled } from '@mui/material/styles';\n\nconst LabelWrapper = styled('span')(\n  ({ theme }) => `\n      background-color: ${theme.colors.alpha.black[5]};\n      padding: ${theme.spacing(0.5, 1)};\n      font-size: ${theme.typography.pxToRem(13)};\n      border-radius: ${theme.general.borderRadius};\n      display: inline-flex;\n      align-items: center;\n      justify-content: center;\n      max-height: ${theme.spacing(3)};\n      \n      &.MuiLabel {\n        &-primary {\n          background-color: ${theme.colors.primary.lighter};\n          color: ${theme.palette.primary.main}\n        }\n\n        &-black {\n          background-color: ${theme.colors.alpha.black[100]};\n          color: ${theme.colors.alpha.white[100]};\n        }\n        \n        &-secondary {\n          background-color: ${theme.colors.secondary.lighter};\n          color: ${theme.palette.secondary.main}\n        }\n        \n        &-success {\n          background-color: ${theme.colors.success.lighter};\n          color: ${theme.palette.success.main}\n        }\n        \n        &-warning {\n          background-color: ${theme.colors.warning.lighter};\n          color: ${theme.palette.warning.main}\n        }\n              \n        &-error {\n          background-color: ${theme.colors.error.lighter};\n          color: ${theme.palette.error.main}\n        }\n        \n        &-info {\n          background-color: ${theme.colors.info.lighter};\n          color: ${theme.palette.info.main}\n        }\n      }\n`\n);\n\nconst Label = ({ className, color = 'secondary', children, ...rest }) => {\n  return (\n    <LabelWrapper className={'MuiLabel-' + color} {...rest}>\n      {children}\n    </LabelWrapper>\n  );\n};\n\nLabel.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  color: PropTypes.oneOf([\n    'primary',\n    'black',\n    'secondary',\n    'error',\n    'warning',\n    'success',\n    'info'\n  ])\n};\n\nexport default Label;\n","import { useState, useRef } from 'react';\n\nimport {\n  Box,\n  Menu,\n  IconButton,\n  Button,\n  ListItemText,\n  ListItem,\n  List,\n  Typography\n} from '@mui/material';\nimport { styled } from '@mui/material/styles';\n\nimport DeleteTwoToneIcon from '@mui/icons-material/DeleteTwoTone';\nimport MoreVertTwoToneIcon from '@mui/icons-material/MoreVertTwoTone';\n\nconst ButtonError = styled(Button)(\n  ({ theme }) => `\n     background: ${theme.colors.error.main};\n     color: ${theme.palette.error.contrastText};\n\n     &:hover {\n        background: ${theme.colors.error.dark};\n     }\n    `\n);\n\nfunction BulkActions() {\n  const [onMenuOpen, menuOpen] = useState(false);\n  const moreRef = useRef(null);\n\n  const openMenu = () => {\n    menuOpen(true);\n  };\n\n  const closeMenu = () => {\n    menuOpen(false);\n  };\n\n  return (\n    <>\n      <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\">\n        <Box display=\"flex\" alignItems=\"center\">\n          <Typography variant=\"h5\" color=\"text.secondary\">\n            Bulk actions:\n          </Typography>\n          <ButtonError\n            sx={{ ml: 1 }}\n            startIcon={<DeleteTwoToneIcon />}\n            variant=\"contained\"\n          >\n            Delete\n          </ButtonError>\n        </Box>\n        <IconButton\n          color=\"primary\"\n          onClick={openMenu}\n          ref={moreRef}\n          sx={{ ml: 2, p: 1 }}\n        >\n          <MoreVertTwoToneIcon />\n        </IconButton>\n      </Box>\n\n      <Menu\n        keepMounted\n        anchorEl={moreRef.current}\n        open={onMenuOpen}\n        onClose={closeMenu}\n        anchorOrigin={{\n          vertical: 'center',\n          horizontal: 'center'\n        }}\n        transformOrigin={{\n          vertical: 'center',\n          horizontal: 'center'\n        }}\n      >\n        <List sx={{ p: 1 }} component=\"nav\">\n          <ListItem button>\n            <ListItemText primary=\"Bulk delete selected\" />\n          </ListItem>\n          <ListItem button>\n            <ListItemText primary=\"Bulk edit selected\" />\n          </ListItem>\n        </List>\n      </Menu>\n    </>\n  );\n}\n\nexport default BulkActions;\n","import { useState, useEffect } from 'react';\nimport { format } from 'date-fns';\n\nimport PropTypes from 'prop-types';\nimport {\n  Tooltip,\n  Divider,\n  Box,\n  FormControl,\n  InputLabel,\n  Card,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  TableContainer,\n  Select,\n  MenuItem,\n  Typography,\n  CardHeader,\n  Button,\n  Snackbar,\n  Alert,\n  Link\n} from '@mui/material';\n\nimport Label from 'src/components/Label';\nimport BulkActions from './BulkActions';\n\nconst languages = {\n  'eng': 'English',\n  'deu': 'German',\n  'rus': 'Russian',\n  'fra': 'French',\n  'spa': 'Spanish',\n  'jpn': 'Japaneese',\n  'hin': 'Hindi',\n\n}\n\nconst getStatusLabel = (cryptoOrderStatus) => {\n  const map = {\n    rejected: {\n      text: 'Rejected',\n      color: 'error'\n    },\n    approved: {\n      text: 'Approved',\n      color: 'success'\n    },\n    pending: {\n      text: 'Pending',\n      color: 'warning'\n    }\n  };\n\n  const { text, color } = map[cryptoOrderStatus];\n\n\n  return <Label color={color}>{text}</Label>;\n};\n\nconst applyFilters = (videos, filters) => {\n  return videos.filter((video) => {\n    let matches = true;\n\n    if (filters.status && video.status !== filters.status) {\n      matches = false;\n    }\n\n    return matches;\n  });\n};\n\nconst applyPagination = (videos, page, limit) => {\n  return videos.slice(page * limit, page * limit + limit);\n};\n\nconst RecentOrdersTable = () => {\n  const [selectedCryptoOrders] = useState([]);\n  const selectedBulkActions = selectedCryptoOrders.length > 0;\n  const [page, setPage] = useState(0);\n  const [limit, setLimit] = useState(5);\n  const [filters, setFilters] = useState({\n    status: null\n  });\n\n  const [err, setErr] = useState({ err: false, message: '' });\n  const [success, setSuccess] = useState({ success: false, message: '' });\n  const [videos, setVideos] = useState([]);\n\n  const statusOptions = [\n    {\n      id: 'all',\n      name: 'All'\n    },\n    {\n      id: 'approved',\n      name: 'Approved'\n    },\n    {\n      id: 'pending',\n      name: 'Pending'\n    },\n    {\n      id: 'rejected',\n      name: 'Rejected'\n    }\n  ];\n\n  const handleApprove = async (event) => {\n    console.log(event.currentTarget.id);\n    event.preventDefault();\n    try {\n      let res = await fetch(`${process.env.REACT_APP_API_URL}/video/approve`, {\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        method: \"POST\",\n        body: JSON.stringify({\n          id: event.currentTarget.id\n        }),\n      });\n      let resJson = await res.json();\n      console.log(resJson);\n      if (res.status === 202) {\n\n        setSuccess({ success: true, message: resJson.data })\n      } else {\n        setErr({ err: \"true\", message: resJson.message });\n        console.log(err, \"got error\");\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n\n  const handleReject = async (event) => {\n    console.log(event.currentTarget.id);\n    event.preventDefault();\n    try {\n      let res = await fetch(`${process.env.REACT_APP_API_URL}/video/reject`, {\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        method: \"POST\",\n        body: JSON.stringify({\n          id: event.currentTarget.id\n        }),\n      });\n      let resJson = await res.json();\n      console.log(resJson);\n      if (res.status === 200) {\n\n        setSuccess({ success: true, message: resJson.data })\n        console.log(err, success);\n      } else {\n        setErr({ err: \"true\", message: resJson.message });\n        console.log(err, \"got error\");\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n\n  const handleStatusChange = (e) => {\n    let value = null;\n\n    if (e.target.value !== 'all') {\n      value = e.target.value;\n    }\n\n    setFilters((prevFilters) => ({\n      ...prevFilters,\n      status: value\n    }));\n  };\n\n  const handlePageChange = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleLimitChange = (event) => {\n    setLimit(parseInt(event.target.value));\n  };\n\n\n\n  const filteredCryptoOrders = applyFilters(videos, filters);\n  const paginatedCryptoOrders = applyPagination(\n    filteredCryptoOrders,\n    page,\n    limit\n  );\n\n  useEffect(() => {\n    const getVideos = async () => {\n      try {\n        let res = await fetch(`${process.env.REACT_APP_API_URL}/video/list`, {\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n          },\n          method: \"POST\",\n          body: JSON.stringify({}),\n        })\n        let resJson = await res.json();\n        setVideos(resJson.data)\n      }\n      catch (err) {\n        console.log(err);\n      }\n    }\n    getVideos();\n\n  }, [success])\n\n  return (\n\n\n    <Card>\n\n      <Snackbar\n        open={success.success}\n        anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\n        autoHideDuration={6000}\n        onClose={() => setSuccess({ success: false })}\n      >\n        <Alert onClose={() => setSuccess({ success: false })} severity=\"success\" sx={{ width: '100%' }}>\n          {success.message}\n        </Alert>\n      </Snackbar>\n\n      <Snackbar\n        open={err.err}\n        anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\n        autoHideDuration={6000}\n        onClose={() => setErr({ err: false })}\n      >\n        <Alert onClose={() => setErr({ err: false })} severity=\"error\" sx={{ width: '100%' }}>\n          {err.message}\n        </Alert>\n      </Snackbar>\n      {selectedBulkActions && (\n        <Box flex={1} p={2}>\n          <BulkActions />\n        </Box>\n      )}\n      {!selectedBulkActions && (\n        <CardHeader\n          action={\n            <Box width={150}>\n              <FormControl fullWidth variant=\"outlined\">\n                <InputLabel>Status</InputLabel>\n                <Select\n                  value={filters.status || 'all'}\n                  onChange={handleStatusChange}\n                  label=\"Status\"\n                  autoWidth\n                >\n                  {statusOptions.map((statusOption) => (\n                    <MenuItem key={statusOption.id} value={statusOption.id}>\n                      {statusOption.name}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            </Box>\n          }\n          title=\"Recent Videos\"\n        />\n      )}\n      <Divider />\n      <TableContainer>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>Video Name</TableCell>\n              <TableCell>Name</TableCell>\n              <TableCell>Status</TableCell>\n              <TableCell >Actions</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {paginatedCryptoOrders.map((cryptoOrder) => {\n              const isCryptoOrderSelected = selectedCryptoOrders.includes(\n                cryptoOrder.id\n              );\n              return (\n                <TableRow\n                  hover\n                  key={cryptoOrder.id}\n                  selected={isCryptoOrderSelected}\n                >\n\n                  <TableCell>\n                    <Typography\n                      variant=\"body1\"\n                      fontWeight=\"bold\"\n                      color=\"text.primary\"\n                      gutterBottom\n                      noWrap\n                    >\n\n                      <Link\n                        href={cryptoOrder.url}\n                        underline=\"hover\"\n                        target=\"_blank\" \n                        rel=\"noopener noreferrer\"\n                        \n                      >\n                        {cryptoOrder.title}\n                      </Link>\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"text.secondary\" noWrap>\n                      {format(new Date(cryptoOrder.date), 'MMMM dd yyyy')}\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"text.secondary\" noWrap>\n                      {languages[cryptoOrder.language]}\n                    </Typography>\n                  </TableCell>\n                  <TableCell>\n                    <Typography\n                      variant=\"body1\"\n                      fontWeight=\"bold\"\n                      color=\"text.primary\"\n                      gutterBottom\n                      noWrap\n                    >\n                      {cryptoOrder.name}\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"text.secondary\" noWrap>\n                      {cryptoOrder.email}\n                    </Typography>\n                  </TableCell>\n\n                  <TableCell>\n                    {getStatusLabel(cryptoOrder.status)}\n                  </TableCell>\n\n                  <TableCell>\n                    {cryptoOrder.status === \"pending\" ?\n                      <>\n                        <Typography>\n                          <Tooltip title=\"Approve Video\" arrow>\n                            <Button\n                              onClick={handleApprove}\n                              id={cryptoOrder.id}\n                              sx={{ margin: 1 }}\n                              size='small'\n                              color='success'\n                              variant=\"contained\"\n\n                            >Approve\n                            </Button>\n                          </Tooltip>\n                        </Typography>\n                        <Typography>\n                          <Tooltip title=\"Reject Video\" arrow>\n                            <Button\n                              onClick={handleReject}\n                              id={cryptoOrder.id}\n                              sx={{ margin: 1 }}\n                              size='small'\n                              color='error'\n                              variant=\"contained\"\n                            >Reject </Button>\n                          </Tooltip>\n                        </Typography>\n                      </>\n\n                      : '---'\n                    }\n\n                  </TableCell>\n                </TableRow>\n              );\n            })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <Box p={2}>\n        <TablePagination\n          component=\"div\"\n          count={filteredCryptoOrders.length}\n          onPageChange={handlePageChange}\n          onRowsPerPageChange={handleLimitChange}\n          page={page}\n          rowsPerPage={limit}\n          rowsPerPageOptions={[5, 10, 25, 30]}\n        />\n      </Box>\n    </Card>\n  );\n};\n\nRecentOrdersTable.propTypes = {\n  videos: PropTypes.array.isRequired\n};\n\nRecentOrdersTable.defaultProps = {\n  videos: []\n};\n\nexport default RecentOrdersTable;\n","import { Helmet } from 'react-helmet-async';\nimport PageHeader from './PageHeader';\nimport PageTitleWrapper from 'src/components/PageTitleWrapper';\nimport { Grid, Container } from '@mui/material';\nimport Footer from 'src/components/Footer';\n\nimport RecentOrdersTable from './RecentOrdersTable';\n\nfunction ApplicationsTransactions() {\n  return (\n    <>\n      <Helmet>\n        <title>Videos - Management</title>\n      </Helmet>\n      <PageTitleWrapper>\n        <PageHeader />\n      </PageTitleWrapper>\n      <Container maxWidth=\"lg\">\n        <Grid\n          container\n          direction=\"row\"\n          justifyContent=\"center\"\n          alignItems=\"stretch\"\n          spacing={3}\n        >\n          <Grid item xs={12}>\n            <RecentOrdersTable />\n          </Grid>\n        </Grid>\n      </Container>\n      <Footer />\n    </>\n  );\n}\n\nexport default ApplicationsTransactions;\n","import PropTypes from 'prop-types';\nimport { Box, Container, styled } from '@mui/material';\n\nconst PageTitle = styled(Box)(\n  ({ theme }) => `\n        padding: ${theme.spacing(4)};\n`\n);\n\nconst PageTitleWrapper = ({ children }) => {\n  return (\n    <PageTitle className=\"MuiPageTitle-wrapper\">\n      <Container maxWidth=\"lg\">{children}</Container>\n    </PageTitle>\n  );\n};\n\nPageTitleWrapper.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nexport default PageTitleWrapper;\n","import { Box, Container, Link, Typography, styled } from '@mui/material';\n\nconst FooterWrapper = styled(Container)(\n  ({ theme }) => `\n        margin-top: ${theme.spacing(4)};\n`\n);\n\nfunction Footer() {\n  return (\n    <FooterWrapper className=\"footer-wrapper\">\n      <Box\n        pb={4}\n        display={{ xs: 'block', md: 'flex' }}\n        alignItems=\"center\"\n        textAlign={{ xs: 'center', md: 'left' }}\n        justifyContent=\"space-between\"\n      >\n        <Box>\n          <Typography variant=\"subtitle1\">\n            &copy; 2022 - Freifunk Videoodyssee Admin Dashboard\n          </Typography>\n        </Box>\n        <Typography\n          sx={{\n            pt: { xs: 2, md: 0 }\n          }}\n          variant=\"subtitle1\"\n        >\n          Crafted by{' '}\n          <Link\n            href=\"https://freifunk.net/en/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Freifunk.net\n          </Link>\n        </Typography>\n      </Box>\n    </FooterWrapper>\n  );\n}\n\nexport default Footer;\n"],"names":["_jsx","Grid","container","justifyContent","alignItems","children","_jsxs","item","Typography","variant","component","gutterBottom","LabelWrapper","styled","_ref","theme","concat","colors","alpha","black","spacing","typography","pxToRem","general","borderRadius","primary","lighter","palette","main","white","secondary","success","warning","error","info","_ref2","className","color","rest","_objectWithoutProperties","_excluded","_objectSpread","ButtonError","Button","contrastText","dark","onMenuOpen","menuOpen","useState","moreRef","useRef","_Fragment","Box","display","sx","ml","startIcon","DeleteTwoToneIcon","IconButton","onClick","openMenu","ref","p","MoreVertTwoToneIcon","Menu","keepMounted","anchorEl","current","open","onClose","closeMenu","anchorOrigin","vertical","horizontal","transformOrigin","List","ListItem","button","ListItemText","languages","getStatusLabel","cryptoOrderStatus","text","rejected","approved","pending","Label","RecentOrdersTable","selectedCryptoOrders","selectedBulkActions","length","page","setPage","limit","setLimit","filters","setFilters","status","err","setErr","message","setSuccess","videos","setVideos","handleApprove","async","console","log","event","currentTarget","id","preventDefault","res","fetch","process","REACT_APP_API_URL","headers","method","body","JSON","stringify","resJson","json","data","handleReject","filteredCryptoOrders","applyFilters","filter","video","matches","paginatedCryptoOrders","applyPagination","slice","useEffect","getVideos","Card","Snackbar","autoHideDuration","Alert","severity","width","flex","BulkActions","CardHeader","action","FormControl","fullWidth","InputLabel","Select","value","onChange","e","target","prevFilters","label","autoWidth","name","map","statusOption","MenuItem","title","Divider","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","cryptoOrder","isCryptoOrderSelected","includes","hover","selected","fontWeight","noWrap","Link","href","url","underline","rel","format","Date","date","language","email","Tooltip","arrow","margin","size","TablePagination","count","onPageChange","handlePageChange","newPage","onRowsPerPageChange","parseInt","rowsPerPage","rowsPerPageOptions","defaultProps","Helmet","PageTitleWrapper","PageHeader","Container","maxWidth","direction","xs","Footer","PageTitle","FooterWrapper","pb","md","textAlign","pt"],"sourceRoot":""}