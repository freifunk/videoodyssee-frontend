{"version":3,"file":"static/js/418.14a2c790.chunk.js","mappings":"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","sources":["components/Footer/index.js","components/PageTitleWrapper/index.js","content/applications/Transactions/PageHeader.js","components/Label/index.js","content/applications/Transactions/BulkActions.js","content/applications/Transactions/RecentOrdersTable.js","content/applications/Transactions/index.js"],"sourcesContent":["import { Box, Container, Link, Typography, styled } from '@mui/material';\n\nconst FooterWrapper = styled(Container)(\n  ({ theme }) => `\n        margin-top: ${theme.spacing(4)};\n`\n);\n\nfunction Footer() {\n  return (\n    <FooterWrapper className=\"footer-wrapper\">\n      <Box\n        pb={4}\n        display={{ xs: 'block', md: 'flex' }}\n        alignItems=\"center\"\n        textAlign={{ xs: 'center', md: 'left' }}\n        justifyContent=\"space-between\"\n      >\n        <Box>\n          <Typography variant=\"subtitle1\">\n            &copy; 2022 - Freifunk Videoodyssee Admin Dashboard\n          </Typography>\n        </Box>\n        <Typography\n          sx={{\n            pt: { xs: 2, md: 0 }\n          }}\n          variant=\"subtitle1\"\n        >\n          Crafted by{' '}\n          <Link\n            href=\"https://freifunk.net/en/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Freifunk.net\n          </Link>\n        </Typography>\n      </Box>\n    </FooterWrapper>\n  );\n}\n\nexport default Footer;\n","import PropTypes from 'prop-types';\nimport { Box, Container, styled } from '@mui/material';\n\nconst PageTitle = styled(Box)(\n  ({ theme }) => `\n        padding: ${theme.spacing(4)};\n`\n);\n\nconst PageTitleWrapper = ({ children }) => {\n  return (\n    <PageTitle className=\"MuiPageTitle-wrapper\">\n      <Container maxWidth=\"lg\">{children}</Container>\n    </PageTitle>\n  );\n};\n\nPageTitleWrapper.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nexport default PageTitleWrapper;\n","import { Typography, Grid } from '@mui/material';\n\n\nfunction PageHeader() {\n  const user = {\n    name: 'Andi Braeu',\n    avatar: '/static/images/avatars/1.jpg'\n  };\n  return (\n    <Grid container justifyContent=\"space-between\" alignItems=\"center\">\n      <Grid item>\n        <Typography variant=\"h3\" component=\"h3\" gutterBottom>\n          Videos\n        </Typography>\n        <Typography variant=\"subtitle2\">\n          {user.name}, these are your recent videos\n        </Typography>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default PageHeader;\n","import PropTypes from 'prop-types';\nimport { styled } from '@mui/material/styles';\n\nconst LabelWrapper = styled('span')(\n  ({ theme }) => `\n      background-color: ${theme.colors.alpha.black[5]};\n      padding: ${theme.spacing(0.5, 1)};\n      font-size: ${theme.typography.pxToRem(13)};\n      border-radius: ${theme.general.borderRadius};\n      display: inline-flex;\n      align-items: center;\n      justify-content: center;\n      max-height: ${theme.spacing(3)};\n      \n      &.MuiLabel {\n        &-primary {\n          background-color: ${theme.colors.primary.lighter};\n          color: ${theme.palette.primary.main}\n        }\n\n        &-black {\n          background-color: ${theme.colors.alpha.black[100]};\n          color: ${theme.colors.alpha.white[100]};\n        }\n        \n        &-secondary {\n          background-color: ${theme.colors.secondary.lighter};\n          color: ${theme.palette.secondary.main}\n        }\n        \n        &-success {\n          background-color: ${theme.colors.success.lighter};\n          color: ${theme.palette.success.main}\n        }\n        \n        &-warning {\n          background-color: ${theme.colors.warning.lighter};\n          color: ${theme.palette.warning.main}\n        }\n              \n        &-error {\n          background-color: ${theme.colors.error.lighter};\n          color: ${theme.palette.error.main}\n        }\n        \n        &-info {\n          background-color: ${theme.colors.info.lighter};\n          color: ${theme.palette.info.main}\n        }\n      }\n`\n);\n\nconst Label = ({ className, color = 'secondary', children, ...rest }) => {\n  return (\n    <LabelWrapper className={'MuiLabel-' + color} {...rest}>\n      {children}\n    </LabelWrapper>\n  );\n};\n\nLabel.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  color: PropTypes.oneOf([\n    'primary',\n    'black',\n    'secondary',\n    'error',\n    'warning',\n    'success',\n    'info'\n  ])\n};\n\nexport default Label;\n","import { useState, useRef } from 'react';\n\nimport {\n  Box,\n  Menu,\n  IconButton,\n  Button,\n  ListItemText,\n  ListItem,\n  List,\n  Typography\n} from '@mui/material';\nimport { styled } from '@mui/material/styles';\n\nimport DeleteTwoToneIcon from '@mui/icons-material/DeleteTwoTone';\nimport MoreVertTwoToneIcon from '@mui/icons-material/MoreVertTwoTone';\n\nconst ButtonError = styled(Button)(\n  ({ theme }) => `\n     background: ${theme.colors.error.main};\n     color: ${theme.palette.error.contrastText};\n\n     &:hover {\n        background: ${theme.colors.error.dark};\n     }\n    `\n);\n\nfunction BulkActions() {\n  const [onMenuOpen, menuOpen] = useState(false);\n  const moreRef = useRef(null);\n\n  const openMenu = () => {\n    menuOpen(true);\n  };\n\n  const closeMenu = () => {\n    menuOpen(false);\n  };\n\n  return (\n    <>\n      <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\">\n        <Box display=\"flex\" alignItems=\"center\">\n          <Typography variant=\"h5\" color=\"text.secondary\">\n            Bulk actions:\n          </Typography>\n          <ButtonError\n            sx={{ ml: 1 }}\n            startIcon={<DeleteTwoToneIcon />}\n            variant=\"contained\"\n          >\n            Delete\n          </ButtonError>\n        </Box>\n        <IconButton\n          color=\"primary\"\n          onClick={openMenu}\n          ref={moreRef}\n          sx={{ ml: 2, p: 1 }}\n        >\n          <MoreVertTwoToneIcon />\n        </IconButton>\n      </Box>\n\n      <Menu\n        keepMounted\n        anchorEl={moreRef.current}\n        open={onMenuOpen}\n        onClose={closeMenu}\n        anchorOrigin={{\n          vertical: 'center',\n          horizontal: 'center'\n        }}\n        transformOrigin={{\n          vertical: 'center',\n          horizontal: 'center'\n        }}\n      >\n        <List sx={{ p: 1 }} component=\"nav\">\n          <ListItem button>\n            <ListItemText primary=\"Bulk delete selected\" />\n          </ListItem>\n          <ListItem button>\n            <ListItemText primary=\"Bulk edit selected\" />\n          </ListItem>\n        </List>\n      </Menu>\n    </>\n  );\n}\n\nexport default BulkActions;\n","import { useState, useEffect } from 'react';\nimport { format } from 'date-fns';\n\nimport PropTypes from 'prop-types';\nimport {\n  Tooltip,\n  Divider,\n  Box,\n  FormControl,\n  InputLabel,\n  Card,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  TableContainer,\n  Select,\n  MenuItem,\n  Typography,\n  CardHeader,\n  Button,\n  Snackbar,\n  Alert\n} from '@mui/material';\n\nimport Label from 'src/components/Label';\nimport BulkActions from './BulkActions';\n\nconst getStatusLabel = (cryptoOrderStatus) => {\n  const map = {\n    rejected: {\n      text: 'Rejected',\n      color: 'error'\n    },\n    approved: {\n      text: 'Approved',\n      color: 'success'\n    },\n    pending: {\n      text: 'Pending',\n      color: 'warning'\n    }\n  };\n\n  const { text, color } = map[cryptoOrderStatus];\n\n\n  return <Label color={color}>{text}</Label>;\n};\n\nconst applyFilters = (videos, filters) => {\n  return videos.filter((video) => {\n    let matches = true;\n\n    if (filters.status && video.status !== filters.status) {\n      matches = false;\n    }\n\n    return matches;\n  });\n};\n\nconst applyPagination = (videos, page, limit) => {\n  return videos.slice(page * limit, page * limit + limit);\n};\n\nconst RecentOrdersTable = () => {\n  const [selectedCryptoOrders] = useState([]);\n  const selectedBulkActions = selectedCryptoOrders.length > 0;\n  const [page, setPage] = useState(0);\n  const [limit, setLimit] = useState(5);\n  const [filters, setFilters] = useState({\n    status: null\n  });\n\n  const [err, setErr] = useState({ err: false, message: '' });\n  const [success, setSuccess] = useState({ success: false, message: '' });\n  const [videos, setVideos] = useState([]);\n\n  const statusOptions = [\n    {\n      id: 'all',\n      name: 'All'\n    },\n    {\n      id: 'approved',\n      name: 'Approved'\n    },\n    {\n      id: 'pending',\n      name: 'Pending'\n    },\n    {\n      id: 'rejected',\n      name: 'Rejected'\n    }\n  ];\n\n  const handleApprove = async (event) => {\n    console.log(event.currentTarget.id);\n    event.preventDefault();\n    try {\n      let res = await fetch(`${process.env.REACT_APP_API_URL}/video/approve`, {\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        method: \"POST\",\n        body: JSON.stringify({\n          id: event.currentTarget.id\n        }),\n      });\n      let resJson = await res.json();\n      console.log(resJson);\n      if (res.status === 202) {\n\n        setSuccess({ success: true, message: resJson.data })\n      } else {\n        setErr({ err: \"true\", message: resJson.message });\n        console.log(err, \"got error\");\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n\n  const handleReject = async (event) => {\n    console.log(event.currentTarget.id);\n    event.preventDefault();\n    try {\n      let res = await fetch(`${process.env.REACT_APP_API_URL}/video/reject`, {\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        method: \"POST\",\n        body: JSON.stringify({\n          id: event.currentTarget.id\n        }),\n      });\n      let resJson = await res.json();\n      console.log(resJson);\n      if (res.status === 200) {\n\n        setSuccess({ success: true, message: resJson.data })\n        console.log(err, success);\n      } else {\n        setErr({ err: \"true\", message: resJson.message });\n        console.log(err, \"got error\");\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n\n  const handleStatusChange = (e) => {\n    let value = null;\n\n    if (e.target.value !== 'all') {\n      value = e.target.value;\n    }\n\n    setFilters((prevFilters) => ({\n      ...prevFilters,\n      status: value\n    }));\n  };\n\n  const handlePageChange = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleLimitChange = (event) => {\n    setLimit(parseInt(event.target.value));\n  };\n\n\n\n  const filteredCryptoOrders = applyFilters(videos, filters);\n  const paginatedCryptoOrders = applyPagination(\n    filteredCryptoOrders,\n    page,\n    limit\n  );\n\n  useEffect(() => {\n    const getVideos = async () => {\n      try {\n        let res = await fetch(`${process.env.REACT_APP_API_URL}/video/list`, {\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n          },\n          method: \"POST\",\n          body: JSON.stringify({}),\n        })\n        let resJson = await res.json();\n        setVideos(resJson.data)\n      }\n      catch (err) {\n        console.log(err);\n      }\n    }\n    getVideos();\n\n  }, [success])\n\n  return (\n\n\n    <Card>\n\n      <Snackbar\n        open={success.success}\n        anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\n        autoHideDuration={6000}\n        onClose={() => setSuccess({ success: false })}\n      >\n        <Alert onClose={() => setSuccess({ success: false })} severity=\"success\" sx={{ width: '100%' }}>\n          {success.message}\n        </Alert>\n      </Snackbar>\n\n      <Snackbar\n        open={err.err}\n        anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\n        autoHideDuration={6000}\n        onClose={() => setErr({ err: false })}\n      >\n        <Alert onClose={() => setErr({ err: false })} severity=\"error\" sx={{ width: '100%' }}>\n          {err.message}\n        </Alert>\n      </Snackbar>\n      {selectedBulkActions && (\n        <Box flex={1} p={2}>\n          <BulkActions />\n        </Box>\n      )}\n      {!selectedBulkActions && (\n        <CardHeader\n          action={\n            <Box width={150}>\n              <FormControl fullWidth variant=\"outlined\">\n                <InputLabel>Status</InputLabel>\n                <Select\n                  value={filters.status || 'all'}\n                  onChange={handleStatusChange}\n                  label=\"Status\"\n                  autoWidth\n                >\n                  {statusOptions.map((statusOption) => (\n                    <MenuItem key={statusOption.id} value={statusOption.id}>\n                      {statusOption.name}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            </Box>\n          }\n          title=\"Recent Videos\"\n        />\n      )}\n      <Divider />\n      <TableContainer>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>Video Name</TableCell>\n              <TableCell>Name</TableCell>\n              <TableCell>Status</TableCell>\n              <TableCell >Actions</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {paginatedCryptoOrders.map((cryptoOrder) => {\n              const isCryptoOrderSelected = selectedCryptoOrders.includes(\n                cryptoOrder.id\n              );\n              return (\n                <TableRow\n                  hover\n                  key={cryptoOrder.id}\n                  selected={isCryptoOrderSelected}\n                >\n\n                  <TableCell>\n                    <Typography\n                      variant=\"body1\"\n                      fontWeight=\"bold\"\n                      color=\"text.primary\"\n                      gutterBottom\n                      noWrap\n                    >\n                      {cryptoOrder.title}\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"text.secondary\" noWrap>\n                      {format(new Date(cryptoOrder.date), 'MMMM dd yyyy')}\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"text.secondary\" noWrap>\n                      {cryptoOrder.language}\n                    </Typography>\n                  </TableCell>\n                  <TableCell>\n                    <Typography\n                      variant=\"body1\"\n                      fontWeight=\"bold\"\n                      color=\"text.primary\"\n                      gutterBottom\n                      noWrap\n                    >\n                      {cryptoOrder.name}\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"text.secondary\" noWrap>\n                      {cryptoOrder.email}\n                    </Typography>\n                  </TableCell>\n\n                  <TableCell>\n                    {getStatusLabel(cryptoOrder.status)}\n                  </TableCell>\n\n                  <TableCell>\n                    {cryptoOrder.status == \"pending\" ?\n                      <>\n                        <Typography>\n                          <Tooltip title=\"Approve Video\" arrow>\n                            <Button\n                              onClick={handleApprove}\n                              id={cryptoOrder.id}\n                              sx={{ margin: 1 }}\n                              size='small'\n                              color='success'\n                              variant=\"contained\"\n\n                            >Approve\n                            </Button>\n                          </Tooltip>\n                        </Typography>\n                        <Typography>\n                          <Tooltip title=\"Reject Video\" arrow>\n                            <Button\n                              onClick={handleReject}\n                              id={cryptoOrder.id}\n                              sx={{ margin: 1  }}\n                              size='small'\n                              color='error'\n                              variant=\"contained\"\n                            >Reject </Button>\n                          </Tooltip>\n                        </Typography>\n                      </>\n\n                      : '-------'\n                    }\n\n                  </TableCell>\n                </TableRow>\n              );\n            })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <Box p={2}>\n        <TablePagination\n          component=\"div\"\n          count={filteredCryptoOrders.length}\n          onPageChange={handlePageChange}\n          onRowsPerPageChange={handleLimitChange}\n          page={page}\n          rowsPerPage={limit}\n          rowsPerPageOptions={[5, 10, 25, 30]}\n        />\n      </Box>\n    </Card>\n  );\n};\n\nRecentOrdersTable.propTypes = {\n  videos: PropTypes.array.isRequired\n};\n\nRecentOrdersTable.defaultProps = {\n  videos: []\n};\n\nexport default RecentOrdersTable;\n","import { Helmet } from 'react-helmet-async';\nimport PageHeader from './PageHeader';\nimport PageTitleWrapper from 'src/components/PageTitleWrapper';\nimport { Grid, Container } from '@mui/material';\nimport Footer from 'src/components/Footer';\n\nimport RecentOrdersTable from './RecentOrdersTable';\n\nfunction ApplicationsTransactions() {\n  return (\n    <>\n      <Helmet>\n        <title>Videos - Management</title>\n      </Helmet>\n      <PageTitleWrapper>\n        <PageHeader />\n      </PageTitleWrapper>\n      <Container maxWidth=\"lg\">\n        <Grid\n          container\n          direction=\"row\"\n          justifyContent=\"center\"\n          alignItems=\"stretch\"\n          spacing={3}\n        >\n          <Grid item xs={12}>\n            <RecentOrdersTable />\n          </Grid>\n        </Grid>\n      </Container>\n      <Footer />\n    </>\n  );\n}\n\nexport default ApplicationsTransactions;\n"],"names":["FooterWrapper","styled","Container","theme","spacing","className","pb","display","xs","md","alignItems","textAlign","justifyContent","variant","sx","pt","href","target","rel","PageTitle","Box","children","maxWidth","Grid","container","item","Typography","component","gutterBottom","LabelWrapper","colors","alpha","black","typography","pxToRem","general","borderRadius","primary","lighter","palette","main","white","secondary","success","warning","error","info","color","rest","ButtonError","Button","contrastText","dark","useState","onMenuOpen","menuOpen","moreRef","useRef","ml","startIcon","DeleteTwoTone","IconButton","onClick","ref","p","MoreVertTwoTone","Menu","keepMounted","anchorEl","current","open","onClose","anchorOrigin","vertical","horizontal","transformOrigin","List","ListItem","button","ListItemText","getStatusLabel","cryptoOrderStatus","rejected","text","approved","pending","RecentOrdersTable","selectedCryptoOrders","selectedBulkActions","length","page","setPage","limit","setLimit","status","filters","setFilters","err","message","setErr","setSuccess","videos","setVideos","handleApprove","event","console","log","currentTarget","id","preventDefault","fetch","process","headers","method","body","JSON","stringify","res","json","resJson","data","handleReject","filteredCryptoOrders","filter","video","matches","applyFilters","paginatedCryptoOrders","slice","applyPagination","useEffect","getVideos","Card","Snackbar","autoHideDuration","Alert","severity","width","flex","CardHeader","action","FormControl","fullWidth","InputLabel","Select","value","onChange","e","prevFilters","label","autoWidth","name","map","statusOption","MenuItem","title","Divider","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","cryptoOrder","isCryptoOrderSelected","includes","hover","selected","fontWeight","noWrap","format","Date","date","language","email","Tooltip","arrow","margin","size","TablePagination","count","onPageChange","newPage","onRowsPerPageChange","parseInt","rowsPerPage","rowsPerPageOptions","defaultProps","PageTitleWrapper","direction","Footer"],"sourceRoot":""}