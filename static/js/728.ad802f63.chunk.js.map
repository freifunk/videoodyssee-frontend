{"version":3,"file":"static/js/728.ad802f63.chunk.js","mappings":"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","sources":["content/applications/Transactions/index.js"],"sourcesContent":["import { useState, useEffect } from 'react';\n\nconst Transactions = () => {\n  const [videos, setVideos] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchVideos = async () => {\n      try {\n        const token = localStorage.getItem('x-token');\n        const res = await fetch(`${process.env.REACT_APP_API_URL}/video/list`, {\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        const resJson = await res.json();\n        setVideos(resJson.data || []);\n      } catch (err) {\n        console.log(err);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchVideos();\n  }, []);\n\n  const handleApprove = async (id) => {\n    try {\n      const token = localStorage.getItem('x-token');\n      await fetch(`${process.env.REACT_APP_API_URL}/video/approve`, {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify({ id })\n      });\n      // Refresh list\n      window.location.reload();\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const handleReject = async (id) => {\n    try {\n      const token = localStorage.getItem('x-token');\n      await fetch(`${process.env.REACT_APP_API_URL}/video/reject`, {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify({ id })\n      });\n      // Refresh list\n      window.location.reload();\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div>\n      <h2>Videos</h2>\n      <p>Diese Videos wurden eingereicht und warten auf Freigabe.</p>\n      \n      <div style={{ overflowX: 'auto' }}>\n        <table style={{ width: '100%', borderCollapse: 'collapse', backgroundColor: 'white', borderRadius: '8px', overflow: 'hidden', boxShadow: '0 2px 4px rgba(0,0,0,0.1)' }}>\n          <thead>\n            <tr style={{ backgroundColor: '#f8f9fa' }}>\n              <th style={{ padding: '1rem', textAlign: 'left', borderBottom: '1px solid #dee2e6' }}>Title</th>\n              <th style={{ padding: '1rem', textAlign: 'left', borderBottom: '1px solid #dee2e6' }}>Status</th>\n              <th style={{ padding: '1rem', textAlign: 'left', borderBottom: '1px solid #dee2e6' }}>Conference</th>\n              <th style={{ padding: '1rem', textAlign: 'left', borderBottom: '1px solid #dee2e6' }}>Date</th>\n              <th style={{ padding: '1rem', textAlign: 'left', borderBottom: '1px solid #dee2e6' }}>Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {videos.map((video, index) => (\n              <tr key={video.id || index} style={{ borderBottom: '1px solid #f1f3f5' }}>\n                <td style={{ padding: '1rem' }}>\n                  <div>\n                    <div style={{ fontWeight: 'bold' }}>{video.title}</div>\n                    <div style={{ fontSize: '0.875rem', color: '#6c757d' }}>{video.subtitle}</div>\n                  </div>\n                </td>\n                <td style={{ padding: '1rem' }}>\n                  <span style={{\n                    padding: '0.25rem 0.5rem',\n                    borderRadius: '4px',\n                    fontSize: '0.75rem',\n                    fontWeight: 'bold',\n                    backgroundColor: video.status === 'approved' ? '#d4edda' : video.status === 'rejected' ? '#f8d7da' : '#fff3cd',\n                    color: video.status === 'approved' ? '#155724' : video.status === 'rejected' ? '#721c24' : '#856404'\n                  }}>\n                    {video.status === 'approved' ? 'Approved' : video.status === 'rejected' ? 'Rejected' : 'Pending'}\n                  </span>\n                </td>\n                <td style={{ padding: '1rem' }}>{video.conference}</td>\n                <td style={{ padding: '1rem' }}>{video.date}</td>\n                <td style={{ padding: '1rem' }}>\n                  <div style={{ display: 'flex', gap: '0.5rem' }}>\n                    <button\n                      onClick={() => handleApprove(video.id)}\n                      style={{\n                        padding: '0.25rem 0.5rem',\n                        backgroundColor: '#28a745',\n                        color: 'white',\n                        border: 'none',\n                        borderRadius: '4px',\n                        cursor: 'pointer',\n                        fontSize: '0.75rem'\n                      }}\n                    >\n                      Approve\n                    </button>\n                    <button\n                      onClick={() => handleReject(video.id)}\n                      style={{\n                        padding: '0.25rem 0.5rem',\n                        backgroundColor: '#dc3545',\n                        color: 'white',\n                        border: 'none',\n                        borderRadius: '4px',\n                        cursor: 'pointer',\n                        fontSize: '0.75rem'\n                      }}\n                    >\n                      Reject\n                    </button>\n                  </div>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n      \n      {videos.length === 0 && (\n        <div style={{ textAlign: 'center', padding: '2rem', color: '#6c757d' }}>\n          Keine Videos gefunden.\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Transactions;\n"],"names":["Transactions","videos","setVideos","useState","loading","setLoading","useEffect","async","token","localStorage","getItem","res","fetch","concat","process","REACT_APP_API_URL","headers","resJson","json","data","err","console","log","fetchVideos","_jsx","children","_jsxs","style","overflowX","width","borderCollapse","backgroundColor","borderRadius","overflow","boxShadow","padding","textAlign","borderBottom","map","video","index","fontWeight","title","fontSize","color","subtitle","status","conference","date","display","gap","onClick","method","body","JSON","stringify","id","window","location","reload","handleApprove","border","cursor","handleReject","length"],"sourceRoot":""}