{"version":3,"file":"static/js/593.a4758ecc.chunk.js","mappings":"iMAEMA,GAAgBC,EAAAA,EAAAA,IAAOC,EAAAA,EAAPD,EACpB,gBAAGE,EAAH,EAAGA,MAAH,sCACoBA,EAAMC,QAAQ,GADlC,UAwCF,IAnCA,WACE,OACE,SAACJ,EAAD,CAAeK,UAAU,iBAAzB,UACE,UAAC,IAAD,CACEC,GAAI,EACJC,QAAS,CAAEC,GAAI,QAASC,GAAI,QAC5BC,WAAW,SACXC,UAAW,CAAEH,GAAI,SAAUC,GAAI,QAC/BG,eAAe,gBALjB,WAOE,SAAC,IAAD,WACE,SAAC,IAAD,CAAYC,QAAQ,YAApB,kEAIF,UAAC,IAAD,CACEC,GAAI,CACFC,GAAI,CAAEP,GAAI,EAAGC,GAAI,IAEnBI,QAAQ,YAJV,uBAMa,KACX,SAAC,IAAD,CACEG,KAAK,2BACLC,OAAO,SACPC,IAAI,sBAHN,iCAWT,C,kQCrBOC,EAAgB,CACpBC,MAAO,GACPC,SAAU,GACVC,QAAS,GACTC,KAAM,GACNC,WAAY,GACZC,SAAU,MACVC,MAAM,IAAIC,MAAOC,cAAcC,MAAM,KAAK,GAC1CC,IAAK,GACLC,KAAM,GACNC,MAAO,GACPC,KAAM,GACNC,YAAa,IA0Sf,EAtSa,WAEX,OAA4BC,EAAAA,EAAAA,UAAShB,GAArC,eAAOiB,EAAP,KAAeC,EAAf,KACA,GAAsBF,EAAAA,EAAAA,UAAS,CAAEG,KAAK,EAAOC,QAAS,KAAtD,eAAOD,EAAP,KAAYE,EAAZ,KACA,GAA8BL,EAAAA,EAAAA,UAAS,CAAEM,SAAS,EAAOF,QAAS,KAAlE,eAAOE,EAAP,KAAgBC,EAAhB,KACA,GAAqCP,EAAAA,EAAAA,UAAS,IAA9C,eAAOQ,EAAP,KAAmBC,EAAnB,KAGMC,EAAoB,SAACC,GACzB,MAAwBA,EAAE7B,OAAlBc,EAAR,EAAQA,KAAMgB,EAAd,EAAcA,MACdV,GAAU,kBACLD,GADI,cAENL,EAAOgB,IAEX,EAEKC,EAAgC,SAACjB,EAAKgB,GAC1CV,GAAU,kBACLD,GADI,cAENL,EAAOgB,IAEX,EAEKE,EAAY,yCAAG,WAAOC,GAAP,qFACnBA,EAAMC,iBADa,kBAGDC,MAAM,GAAD,OAAIC,wBAAJ,WAA4C,CAC/DC,QAAS,CACP,OAAU,mBACV,eAAgB,oBAElBC,OAAQ,OACRC,KAAMC,KAAKC,UAAUtB,KATN,cAGbuB,EAHa,gBAWGA,EAAIC,OAXP,OAWbC,EAXa,OAYjBC,QAAQC,IAAIF,GACO,MAAfF,EAAIK,OAENtB,EAAW,CAAED,SAAS,EAAMF,QAASsB,EAAQI,OAE7CzB,EAAO,CAAEF,KAAK,EAAMC,QAASsB,EAAQtB,UAjBtB,kDAoBjBuB,QAAQC,IAAR,MApBiB,0DAAH,sDA+ClB,OAtBAG,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAc,yCAAG,oHAEHf,MAAM,GAAD,OAAIC,6BAAJ,uBAAiE,CACpFC,QAAS,CACP,OAAU,mBACV,eAAgB,sBALD,cAEfK,EAFe,gBAQCA,EAAIC,OARL,OAQfC,EARe,OASnBjB,EAAeiB,EAAQlB,aACvBN,GAAU,kBAAID,GAAL,IAAYZ,WAAWqC,EAAQlB,YAAY,GAAGyB,WAVpC,kDAanBN,QAAQC,IAAR,MAbmB,0DAAH,qDAgBpBI,GAED,GAAC,KAIA,UAACE,EAAA,GAAD,YAGE,SAACC,EAAA,EAAD,CACEC,KAAM9B,EAAQA,QACd+B,aAAc,CAAEC,SAAU,MAAOC,WAAY,SAC7CC,iBAAkB,IAClBC,QAAS,kBAAMlC,EAAW,CAAED,SAAS,GAA5B,EAJX,UAME,SAACoC,EAAA,EAAD,CAAOD,QAAS,kBAAMlC,EAAW,CAAED,SAAS,GAA5B,EAAsCqC,SAAS,UAAUhE,GAAI,CAAEiE,MAAO,QAAtF,SACGtC,EAAQF,aAIb,SAAC+B,EAAA,EAAD,CACEC,KAAMjC,EAAIA,IACVkC,aAAc,CAAEC,SAAU,MAAOC,WAAY,SAC7CC,iBAAkB,IAClBC,QAAS,kBAAMpC,EAAO,CAAEF,KAAK,GAApB,EAJX,UAME,SAACuC,EAAA,EAAD,CAAOD,QAAS,kBAAMpC,EAAO,CAAEF,KAAK,GAApB,EAA8BwC,SAAS,QAAQhE,GAAI,CAAEiE,MAAO,QAA5E,SACGzC,EAAIC,aAIT,UAACyC,EAAA,EAAD,CAAOC,UAAW,GAAI5E,UAAU,QAAhC,WACE,gBAAK6E,IAAI,qCAAqCC,IAAI,mBAClD,eAAIC,MAAM,SAAV,4BACA,wBACE,SAACC,EAAA,EAAD,CAAaC,WAAS,EAAtB,UACE,SAACC,EAAA,EAAD,CACExC,MAAOX,EAAOhB,MACdW,KAAK,QACLyD,SAAU3C,EACV4C,GAAG,iBACHC,MAAM,QACN7E,QAAQ,WACR8E,KAAK,QACLC,WAAS,SAIf,wBACE,SAACP,EAAA,EAAD,CAAaC,WAAS,EAAtB,UACE,SAACC,EAAA,EAAD,CACExC,MAAOX,EAAOf,SACdU,KAAK,WACLyD,SAAU3C,EACV4C,GAAG,iBACHC,MAAM,WACN7E,QAAQ,WACR8E,KAAK,eAMX,wBACE,SAACN,EAAA,EAAD,CAAaC,WAAS,EAAtB,UACE,SAACO,EAAA,EAAD,CAEEC,UAAQ,EACRL,GAAG,UACHD,SAAU,SAACtC,EAAOH,GAAR,OAAkBC,EAA8B,UAAUD,EAA1D,EACVgD,QAAS,GACTC,UAAQ,EACRL,KAAK,QACLM,YAAa,SAACC,GAAD,OAAY,SAACX,EAAA,GAAD,kBAAeW,GAAf,IAAuBR,MAAM,YAAzC,SAKnB,wBACE,SAACL,EAAA,EAAD,CAAaC,WAAS,EAAtB,UACE,SAACO,EAAA,EAAD,CAEEC,UAAQ,EACRL,GAAG,OACHD,SAAU,SAACtC,EAAOH,GAAR,OAAkBC,EAA8B,OAAOD,EAAvD,EACVgD,QAAS,GACTC,UAAQ,EACRL,KAAK,QACLM,YAAa,SAACC,GAAD,OAAY,SAACX,EAAA,GAAD,kBAAeW,GAAf,IAAuBR,MAAM,SAAzC,SAKnB,wBACE,UAACL,EAAA,EAAD,CAAaC,WAAS,EAAtB,WACE,SAACa,EAAA,EAAD,CAAYV,GAAG,qBAAf,yBACA,SAACW,EAAA,EAAD,CACEC,QAAQ,qBACRZ,GAAG,aACH1D,KAAK,aACLgB,MAAOX,EAAOZ,WACdgE,SAAU3C,EACV6C,MAAM,aACNC,KAAK,QAPP,SASGhD,EAAY2D,KAAI,WAAqBC,GAArB,IAAGnC,EAAH,EAAGA,QAAShD,EAAZ,EAAYA,MAAZ,OAA+B,SAACoF,EAAA,EAAD,CAAUzD,MAAOqB,EAAjB,SAA2BhD,GAA1D,YAKvB,wBACE,UAACiE,EAAA,EAAD,CAAaC,WAAS,EAAtB,WACE,SAACa,EAAA,EAAD,CAAYV,GAAG,oBAAf,uBACA,UAACW,EAAA,EAAD,CACEC,QAAQ,oBACRZ,GAAG,WACH1D,KAAK,WACLgB,MAAOX,EAAOX,SACd+D,SAAU3C,EACV6C,MAAM,WACNC,KAAK,QAPP,WASE,SAACa,EAAA,EAAD,CAAUzD,MAAO,MAAjB,sBACA,SAACyD,EAAA,EAAD,CAAUzD,MAAO,MAAjB,qBACA,SAACyD,EAAA,EAAD,CAAUzD,MAAO,MAAjB,sBACA,SAACyD,EAAA,EAAD,CAAUzD,MAAO,MAAjB,qBACA,SAACyD,EAAA,EAAD,CAAUzD,MAAO,MAAjB,sBACA,SAACyD,EAAA,EAAD,CAAUzD,MAAO,MAAjB,wBACA,SAACyD,EAAA,EAAD,CAAUzD,MAAO,MAAjB,4BAMN,wBACE,SAACsC,EAAA,EAAD,CAAaC,WAAS,EAAtB,UACE,SAACC,EAAA,EAAD,CACExC,MAAOX,EAAOV,KACdK,KAAK,OACLyD,SAAU3C,EACV4C,GAAG,OACHC,MAAM,OACNe,KAAK,OACLd,KAAK,eAOX,wBACE,SAACN,EAAA,EAAD,CAAaC,WAAS,EAAtB,UACE,SAACC,EAAA,EAAD,CACExC,MAAOX,EAAON,IACd0D,SAAU3C,EACVd,KAAK,MACL0D,GAAG,MACHC,MAAM,YACNe,KAAK,MACLd,KAAK,eAKX,wBACE,SAACN,EAAA,EAAD,CAAaC,WAAS,EAAtB,UACE,SAACC,EAAA,EAAD,CACExC,MAAOX,EAAOL,KACdyD,SAAU3C,EACVd,KAAK,OACL0D,GAAG,OACHC,MAAM,OACNC,KAAK,eAMX,wBACE,SAACN,EAAA,EAAD,CAAaC,WAAS,EAAtB,UACE,SAACC,EAAA,EAAD,CACExC,MAAOX,EAAOJ,MACdwD,SAAU3C,EACVd,KAAK,QACL0D,GAAG,QACHC,MAAM,QACNe,KAAK,QACLd,KAAK,eAKX,wBACE,SAACN,EAAA,EAAD,CAAaC,WAAS,EAAtB,UACE,SAACC,EAAA,EAAD,CACExC,MAAOX,EAAOH,KACduD,SAAU3C,EACVd,KAAK,OACL0D,GAAG,OACHC,MAAM,OAENC,KAAK,eAKX,wBACE,SAACN,EAAA,EAAD,CAAaC,WAAS,EAAtB,UACE,SAACC,EAAA,EAAD,CACExC,MAAOX,EAAOF,YACdsD,SAAU3C,EACVd,KAAK,cACL0D,GAAG,cACHC,MAAM,cACNC,KAAK,QACLe,WAAS,SAIf,SAACrB,EAAA,EAAD,CAAaC,WAAS,EAAtB,UACE,SAACqB,EAAA,EAAD,CAAQ9F,QAAQ,YAAY+F,QAAS3D,EAArC,2BAOT,C","sources":["components/Footer/index.js","content/applications/Form/index.js"],"sourcesContent":["import { Box, Container, Link, Typography, styled } from '@mui/material';\n\nconst FooterWrapper = styled(Container)(\n  ({ theme }) => `\n        margin-top: ${theme.spacing(4)};\n`\n);\n\nfunction Footer() {\n  return (\n    <FooterWrapper className=\"footer-wrapper\">\n      <Box\n        pb={4}\n        display={{ xs: 'block', md: 'flex' }}\n        alignItems=\"center\"\n        textAlign={{ xs: 'center', md: 'left' }}\n        justifyContent=\"space-between\"\n      >\n        <Box>\n          <Typography variant=\"subtitle1\">\n            &copy; 2022 - Freifunk Videoodyssee Admin Dashboard\n          </Typography>\n        </Box>\n        <Typography\n          sx={{\n            pt: { xs: 2, md: 0 }\n          }}\n          variant=\"subtitle1\"\n        >\n          Crafted by{' '}\n          <Link\n            href=\"https://freifunk.net/en/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Freifunk.net\n          </Link>\n        </Typography>\n      </Box>\n    </FooterWrapper>\n  );\n}\n\nexport default Footer;\n","import {\n    Grid,\n    Paper,\n    TextField,\n    Select,\n    MenuItem,\n    FormControl,\n    Autocomplete,\n    InputLabel,\n    Button,\n    Alert,\n    Snackbar,\n  \n  } from '@mui/material';\n  \n  import './styles.css'\n  import { useState , useEffect } from 'react';\n  import Footer from 'src/components/Footer';\n  \n  \n  const initialValues = {\n    title: \"\",\n    subtitle: \"\",\n    persons: [],\n    tags: [],\n    conference: \"\",\n    language: \"eng\",\n    date: new Date().toISOString().split('T')[0],\n    url: \"\",\n    name: \"\",\n    email: \"\",\n    link: \"\",\n    description: \"\"\n  };\n  \n  \n  const Form = () => {\n  \n    const [values, setValues] = useState(initialValues);\n    const [err, setErr] = useState({ err: false, message: '' });\n    const [success, setSuccess] = useState({ success: false, message: '' });\n    const [conferences,setConferences] = useState([]);\n  \n  \n    const handleInputChange = (e) => {\n      const { name, value } = e.target;\n      setValues({\n        ...values,\n        [name]: value,\n      });\n    };\n\n    const handleAutocompleteInputChange = (name,value) => {\n      setValues({\n        ...values,\n        [name]: value,\n      });\n    };\n  \n    const handleSubmit = async (event) => {\n      event.preventDefault();\n      try {\n        let res = await fetch(`${process.env.REACT_APP_API_URL}/video/`, {\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n          },\n          method: \"POST\",\n          body: JSON.stringify(values),\n        });\n        let resJson = await res.json();\n        console.log(resJson);\n        if (res.status === 200) {\n\n          setSuccess({ success: true, message: resJson.data })\n        } else {\n          setErr({ err: true, message: resJson.message })\n        }\n      } catch (err) {\n        console.log(err);\n      }\n  \n    };\n\n    useEffect(() => {\n      const getConferences = async () => {\n        try {\n          let res = await fetch(`${process.env.REACT_APP_VOCTOWEB_API_URL}/public/conferences`, {\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/json',\n            }\n          })\n          let resJson = await res.json();\n          setConferences(resJson.conferences);\n          setValues({...values,conference:resJson.conferences[0].acronym});\n        }\n        catch (err) {\n          console.log(err);\n        }\n      }\n      getConferences();\n  \n    },[])\n  \n  \n    return (\n      <Grid>\n\n       \n        <Snackbar\n          open={success.success}\n          anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n          autoHideDuration={6000}\n          onClose={() => setSuccess({ success: false })}\n        >\n          <Alert onClose={() => setSuccess({ success: false })} severity=\"success\" sx={{ width: '100%' }}>\n            {success.message}\n          </Alert>\n        </Snackbar>\n  \n        <Snackbar\n          open={err.err}\n          anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n          autoHideDuration={6000}\n          onClose={() => setErr({ err: false })}\n        >\n          <Alert onClose={() => setErr({ err: false })} severity=\"error\" sx={{ width: '100%' }}>\n            {err.message}\n          </Alert>\n        </Snackbar>\n  \n        <Paper elevation={10} className=\"paper\">\n          <img src=\"/static/images/logo/logo-small.png\" alt='Friefunk logo'/>\n          <h2 align='center'>Video Upload </h2>\n          <p>\n            <FormControl fullWidth >\n              <TextField\n                value={values.title}\n                name=\"title\"\n                onChange={handleInputChange}\n                id=\"outlined-basic\"\n                label=\"Title\"\n                variant=\"outlined\"\n                size='small'\n                autoFocus\n              />\n            </FormControl>\n          </p>\n          <p>\n            <FormControl fullWidth >\n              <TextField\n                value={values.subtitle}\n                name=\"subtitle\"\n                onChange={handleInputChange}\n                id=\"outlined-basic\"\n                label=\"Subtitle\"\n                variant=\"outlined\"\n                size='small'\n              />\n  \n            </FormControl>\n          </p>\n  \n          <p>\n            <FormControl fullWidth >\n              <Autocomplete\n  \n                multiple\n                id=\"persons\"\n                onChange={(event, value) => handleAutocompleteInputChange('persons',value)}\n                options={[]}\n                freeSolo\n                size='small'\n                renderInput={(params) => <TextField {...params} label=\"Persons\" />}\n              />\n            </FormControl>\n          </p>\n  \n          <p>\n            <FormControl fullWidth >\n              <Autocomplete\n  \n                multiple\n                id=\"tags\"\n                onChange={(event, value) => handleAutocompleteInputChange('tags',value)}\n                options={[]}\n                freeSolo\n                size='small'\n                renderInput={(params) => <TextField {...params} label=\"Tags\" />}\n              />\n            </FormControl>\n          </p>\n  \n          <p>\n            <FormControl fullWidth >\n              <InputLabel id=\"event-select-label\">Conference</InputLabel>\n              <Select\n                labelId=\"event-select-label\"\n                id=\"conference\"\n                name=\"conference\"\n                value={values.conference}\n                onChange={handleInputChange}\n                label=\"Conference\"\n                size='small'\n              >\n                {conferences.map(({ acronym, title }, index) => <MenuItem value={acronym}>{title}</MenuItem>)}\n              </Select>\n            </FormControl> \n          </p>\n  \n          <p>\n            <FormControl fullWidth >\n              <InputLabel id=\"lang-select-label\">Language</InputLabel>\n              <Select\n                labelId=\"lang-select-label\"\n                id=\"language\"\n                name=\"language\"\n                value={values.language}\n                onChange={handleInputChange}\n                label=\"Language\"\n                size='small'\n              >\n                <MenuItem value={'eng'}>English</MenuItem>\n                <MenuItem value={'deu'}>German</MenuItem>\n                <MenuItem value={'rus'}>Russian</MenuItem>\n                <MenuItem value={'fra'}>French</MenuItem>\n                <MenuItem value={'spa'}>Spanish</MenuItem>\n                <MenuItem value={'jpn'}>Japaneese</MenuItem>\n                <MenuItem value={'hin'}>Hindi</MenuItem>\n               \n              </Select>\n            </FormControl>\n          </p>\n  \n          <p>\n            <FormControl fullWidth >\n              <TextField\n                value={values.date}\n                name=\"date\"\n                onChange={handleInputChange}\n                id=\"date\"\n                label=\"Date\"\n                type=\"date\"\n                size='small'\n  \n              />\n            </FormControl>\n  \n          </p>\n  \n          <p>\n            <FormControl fullWidth >\n              <TextField\n                value={values.url}\n                onChange={handleInputChange}\n                name=\"url\"\n                id=\"url\"\n                label=\"Video URL\"\n                type='url'\n                size='small'\n              />\n            </FormControl>\n          </p>\n  \n          <p>\n            <FormControl fullWidth >\n              <TextField\n                value={values.name}\n                onChange={handleInputChange}\n                name=\"name\"\n                id=\"name\"\n                label=\"Name\"\n                size='small'\n              />\n            </FormControl>\n          </p>\n  \n  \n          <p>\n            <FormControl fullWidth >\n              <TextField\n                value={values.email}\n                onChange={handleInputChange}\n                name=\"email\"\n                id=\"email\"\n                label=\"Email\"\n                type=\"email\"\n                size='small'\n              />\n            </FormControl>\n          </p>\n  \n          <p>\n            <FormControl fullWidth >\n              <TextField\n                value={values.link}\n                onChange={handleInputChange}\n                name=\"link\"\n                id=\"link\"\n                label=\"Link\"\n  \n                size='small'\n              />\n            </FormControl>\n          </p>\n  \n          <p>\n            <FormControl fullWidth >\n              <TextField\n                value={values.description}\n                onChange={handleInputChange}\n                name=\"description\"\n                id=\"description\"\n                label=\"Description\"\n                size='small'\n                multiline\n              />\n            </FormControl>\n          </p>\n          <FormControl fullWidth >\n            <Button variant=\"contained\" onClick={handleSubmit}>\n              Submit\n            </Button>\n          </FormControl>\n        </Paper>\n      </Grid>\n    )\n  }\n  \n  export default Form;\n  "],"names":["FooterWrapper","styled","Container","theme","spacing","className","pb","display","xs","md","alignItems","textAlign","justifyContent","variant","sx","pt","href","target","rel","initialValues","title","subtitle","persons","tags","conference","language","date","Date","toISOString","split","url","name","email","link","description","useState","values","setValues","err","message","setErr","success","setSuccess","conferences","setConferences","handleInputChange","e","value","handleAutocompleteInputChange","handleSubmit","event","preventDefault","fetch","process","headers","method","body","JSON","stringify","res","json","resJson","console","log","status","data","useEffect","getConferences","acronym","Grid","Snackbar","open","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","Alert","severity","width","Paper","elevation","src","alt","align","FormControl","fullWidth","TextField","onChange","id","label","size","autoFocus","Autocomplete","multiple","options","freeSolo","renderInput","params","InputLabel","Select","labelId","map","index","MenuItem","type","multiline","Button","onClick"],"sourceRoot":""}