{"version":3,"file":"static/js/593.885ac614.chunk.js","mappings":"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","sources":["content/applications/Form/index.js"],"sourcesContent":["import {\n  Grid,\n  Paper,\n  TextField,\n  Select,\n  MenuItem,\n  FormControl,\n  Autocomplete,\n  InputLabel,\n  Button,\n  Alert,\n  Snackbar,\n\n} from '@mui/material';\n\nimport './styles.css'\nimport { useState, useEffect } from 'react';\n\nconst languages = {\n  'eng': 'English',\n  'deu': 'German',\n  'rus': 'Russian',\n  'fra': 'French',\n  'spa': 'Spanish',\n  'jpn': 'Japaneese',\n  'hin': 'Hindi',\n\n}\n\nconst initialValues = {\n  title: \"\",\n  subtitle: \"\",\n  persons: [],\n  tags: [],\n  conference: \"\",\n  language: \"eng\",\n  date: new Date().toISOString().split('T')[0],\n  url: \"\",\n  name: \"\",\n  email: \"\",\n  link: \"\",\n  description: \"\"\n};\n\n\nconst Form = () => {\n\n  const [values, setValues] = useState(initialValues);\n  const [err, setErr] = useState({ err: false, message: '' });\n  const [success, setSuccess] = useState({ success: false, message: '' });\n  const [conferences, setConferences] = useState([]);\n\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setValues({\n      ...values,\n      [name]: value,\n    });\n  };\n\n  const handleAutocompleteInputChange = (name, value) => {\n    setValues({\n      ...values,\n      [name]: value,\n    });\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      let res = await fetch(`${process.env.REACT_APP_API_URL}/video/`, {\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        method: \"POST\",\n        body: JSON.stringify(values),\n      });\n      let resJson = await res.json();\n      console.log(resJson);\n      if (res.status === 200) {\n\n        setSuccess({ success: true, message: resJson.data })\n      } else {\n        setErr({ err: true, message: resJson.message })\n      }\n    } catch (err) {\n      console.log(err);\n    }\n\n  };\n\n  useEffect(() => {\n    const getConferences = async () => {\n      try {\n        let res = await fetch(`${process.env.REACT_APP_VOCTOWEB_API_URL}/public/conferences`, {\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n          }\n        })\n        let resJson = await res.json();\n        setConferences(resJson.conferences);\n        setValues({ ...values, conference: resJson.conferences[0].acronym });\n      }\n      catch (err) {\n        console.log(err);\n      }\n    }\n    getConferences();\n\n  }, [])\n\n\n  return (\n    <Grid>\n\n\n      <Snackbar\n        open={success.success}\n        anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n        autoHideDuration={6000}\n        onClose={() => setSuccess({ success: false })}\n      >\n        <Alert onClose={() => setSuccess({ success: false })} severity=\"success\" sx={{ width: '100%' }}>\n          {success.message}\n        </Alert>\n      </Snackbar>\n\n      <Snackbar\n        open={err.err}\n        anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n        autoHideDuration={6000}\n        onClose={() => setErr({ err: false })}\n      >\n        <Alert onClose={() => setErr({ err: false })} severity=\"error\" sx={{ width: '100%' }}>\n          {err.message}\n        </Alert>\n      </Snackbar>\n\n      <Paper elevation={10} className=\"paper\">\n        <img src=\"/static/images/logo/logo-small.png\" alt='Friefunk logo' />\n        <h2 align='center'>Video Upload </h2>\n        <p>\n          <FormControl fullWidth >\n            <TextField\n              value={values.title}\n              name=\"title\"\n              onChange={handleInputChange}\n              id=\"outlined-basic\"\n              label=\"Title\"\n              variant=\"outlined\"\n              size='small'\n              autoFocus\n            />\n          </FormControl>\n        </p>\n        <p>\n          <FormControl fullWidth >\n            <TextField\n              value={values.subtitle}\n              name=\"subtitle\"\n              onChange={handleInputChange}\n              id=\"outlined-basic\"\n              label=\"Subtitle\"\n              variant=\"outlined\"\n              size='small'\n            />\n\n          </FormControl>\n        </p>\n\n        <p>\n          <FormControl fullWidth >\n            <Autocomplete\n\n              multiple\n              id=\"persons\"\n              onChange={(event, value) => handleAutocompleteInputChange('persons', value)}\n              options={[]}\n              freeSolo\n              size='small'\n              renderInput={(params) => <TextField {...params} label=\"Persons\" />}\n            />\n          </FormControl>\n        </p>\n\n        <p>\n          <FormControl fullWidth >\n            <Autocomplete\n\n              multiple\n              id=\"tags\"\n              onChange={(event, value) => handleAutocompleteInputChange('tags', value)}\n              options={[]}\n              freeSolo\n              size='small'\n              renderInput={(params) => <TextField {...params} label=\"Tags\" />}\n            />\n          </FormControl>\n        </p>\n\n        <p>\n          <FormControl fullWidth >\n            <InputLabel id=\"event-select-label\">Conference</InputLabel>\n            <Select\n              labelId=\"event-select-label\"\n              id=\"conference\"\n              name=\"conference\"\n              value={values.conference}\n              onChange={handleInputChange}\n              label=\"Conference\"\n              size='small'\n            >\n              {conferences.map(({ acronym, title }, index) => <MenuItem value={acronym}>{title}</MenuItem>)}\n            </Select>\n          </FormControl>\n        </p>\n\n        <p>\n          <FormControl fullWidth >\n            <InputLabel id=\"lang-select-label\">Language</InputLabel>\n            <Select\n              labelId=\"lang-select-label\"\n              id=\"language\"\n              name=\"language\"\n              value={values.language}\n              onChange={handleInputChange}\n              label=\"Language\"\n              size='small'\n            >\n              <MenuItem value={'eng'}>English</MenuItem>\n              <MenuItem value={'deu'}>German</MenuItem>\n              <MenuItem value={'rus'}>Russian</MenuItem>\n              <MenuItem value={'fra'}>French</MenuItem>\n              <MenuItem value={'spa'}>Spanish</MenuItem>\n              <MenuItem value={'jpn'}>Japaneese</MenuItem>\n              <MenuItem value={'hin'}>Hindi</MenuItem>\n\n\n            </Select>\n          </FormControl>\n        </p>\n\n        <p>\n          <FormControl fullWidth >\n            <TextField\n              value={values.date}\n              name=\"date\"\n              onChange={handleInputChange}\n              id=\"date\"\n              label=\"Date\"\n              type=\"date\"\n              size='small'\n\n            />\n          </FormControl>\n\n        </p>\n\n        <p>\n          <FormControl fullWidth >\n            <TextField\n              value={values.url}\n              onChange={handleInputChange}\n              name=\"url\"\n              id=\"url\"\n              label=\"Video URL\"\n              type='url'\n              size='small'\n            />\n          </FormControl>\n        </p>\n\n        <p>\n          <FormControl fullWidth >\n            <TextField\n              value={values.name}\n              onChange={handleInputChange}\n              name=\"name\"\n              id=\"name\"\n              label=\"Name\"\n              size='small'\n            />\n          </FormControl>\n        </p>\n\n\n        <p>\n          <FormControl fullWidth >\n            <TextField\n              value={values.email}\n              onChange={handleInputChange}\n              name=\"email\"\n              id=\"email\"\n              label=\"Email\"\n              type=\"email\"\n              size='small'\n            />\n          </FormControl>\n        </p>\n\n        <p>\n          <FormControl fullWidth >\n            <TextField\n              value={values.link}\n              onChange={handleInputChange}\n              name=\"link\"\n              id=\"link\"\n              label=\"Link\"\n\n              size='small'\n            />\n          </FormControl>\n        </p>\n\n        <p>\n          <FormControl fullWidth >\n            <TextField\n              value={values.description}\n              onChange={handleInputChange}\n              name=\"description\"\n              id=\"description\"\n              label=\"Description\"\n              size='small'\n              multiline\n            />\n          </FormControl>\n        </p>\n        <FormControl fullWidth >\n          <Button variant=\"contained\" onClick={handleSubmit}>\n            Submit\n          </Button>\n        </FormControl>\n      </Paper>\n    </Grid>\n  )\n}\n\nexport default Form;\n"],"names":["initialValues","title","subtitle","persons","tags","conference","language","date","Date","toISOString","split","url","name","email","link","description","useState","values","setValues","err","message","setErr","success","setSuccess","conferences","setConferences","handleInputChange","e","target","value","handleAutocompleteInputChange","handleSubmit","event","preventDefault","fetch","process","headers","method","body","JSON","stringify","res","json","resJson","console","log","status","data","useEffect","getConferences","acronym","Grid","Snackbar","open","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","Alert","severity","sx","width","Paper","elevation","className","src","alt","align","FormControl","fullWidth","TextField","onChange","id","label","variant","size","autoFocus","Autocomplete","multiple","options","freeSolo","renderInput","params","InputLabel","Select","labelId","map","index","MenuItem","type","multiline","Button","onClick"],"sourceRoot":""}